[
  {
    "objectID": "index.html#latest-updates-from-mastadon",
    "href": "index.html#latest-updates-from-mastadon",
    "title": "STEMcoding",
    "section": "Latest Updates from Mastadon!",
    "text": "Latest Updates from Mastadon!"
  },
  {
    "objectID": "index.html#featured-stemcoding-activites",
    "href": "index.html#featured-stemcoding-activites",
    "title": "STEMcoding",
    "section": "Featured STEMcoding Activites",
    "text": "Featured STEMcoding Activites"
  },
  {
    "objectID": "people.html",
    "href": "people.html",
    "title": "Meet the STEMcoding Team!",
    "section": "",
    "text": "Chris Orban Prof. of Physics at OSU Marion\nScott Zimmerman Prof of Mathematics at OSU Marion\n\n\n\n\n\n\nJessica Kulp Grad student OSU EHE\nKelsey Badger Research Data Librarian\n\n\n\n\n\n\nJulie Butler University of Mount Union"
  },
  {
    "objectID": "people.html#current-team",
    "href": "people.html#current-team",
    "title": "Meet the STEMcoding Team!",
    "section": "",
    "text": "Chris Orban Prof. of Physics at OSU Marion\nScott Zimmerman Prof of Mathematics at OSU Marion\n\n\n\n\n\n\nJessica Kulp Grad student OSU EHE\nKelsey Badger Research Data Librarian\n\n\n\n\n\n\nJulie Butler University of Mount Union"
  },
  {
    "objectID": "people.html#former-team-members",
    "href": "people.html#former-team-members",
    "title": "Meet the STEMcoding Team!",
    "section": "Former Team Members",
    "text": "Former Team Members\n\nKelsey Badger\nLilith Daemon\nNash Brecht\nBrian Gainer\nJoe Griffith\nVictoria Hartmann\nJacob Moore\nChris Porter\nRichelle Teeling-Smith\nDemetrius Tuggle"
  },
  {
    "objectID": "tags/data_science.html",
    "href": "tags/data_science.html",
    "title": "Data Science",
    "section": "",
    "text": "Earth Day"
  },
  {
    "objectID": "flowchart.html",
    "href": "flowchart.html",
    "title": "Activities Flowcharts",
    "section": "",
    "text": "flowchart LR\n  A[Move the Blob] --&gt; B[Accelerate the Blob]\n  B --&gt; C[Apollo Moon Landing]\n  C --&gt; D[Bird Launcher]"
  },
  {
    "objectID": "flowchart.html#move-the-blob",
    "href": "flowchart.html#move-the-blob",
    "title": "Activities Flowcharts",
    "section": "",
    "text": "flowchart LR\n  A[Move the Blob] --&gt; B[Accelerate the Blob]\n  B --&gt; C[Apollo Moon Landing]\n  C --&gt; D[Bird Launcher]"
  },
  {
    "objectID": "flowchart.html#planetoids",
    "href": "flowchart.html#planetoids",
    "title": "Activities Flowcharts",
    "section": "Planetoids",
    "text": "Planetoids\n\n\n\n\n\nflowchart LR\n  A[Planetoids] --&gt; B[Lunar Descent]\n  B --&gt; C[Bellicose Birds]"
  },
  {
    "objectID": "flowchart.html#pong",
    "href": "flowchart.html#pong",
    "title": "Activities Flowcharts",
    "section": "Pong",
    "text": "Pong\n\n\n\n\n\nflowchart LR\n  A[Pong] --&gt; B[Bonk.io Clone]"
  },
  {
    "objectID": "flowchart.html#slingshot-with-gravity",
    "href": "flowchart.html#slingshot-with-gravity",
    "title": "Activities Flowcharts",
    "section": "Slingshot with Gravity!",
    "text": "Slingshot with Gravity!\n\n\n\n\n\nflowchart LR\n  A[Slingshot with Gravity!] --&gt; B[Escape Velocity and Newtonian Black Holes]\n  A --&gt; C[Exoplanets]"
  },
  {
    "objectID": "projects/flower.html",
    "href": "projects/flower.html",
    "title": "Mathematical Flower Activity",
    "section": "",
    "text": "Maybe it’s valentines day. Maybe it’s finally spring! Maybe you are a terrible gardener and incapable of growing flowers. Let’s make our own flowers using mathematical functions."
  },
  {
    "objectID": "projects/flower.html#links-to-activity",
    "href": "projects/flower.html#links-to-activity",
    "title": "Mathematical Flower Activity",
    "section": "Links to Activity",
    "text": "Links to Activity\n*Instructions for Mathematical Flower Activity"
  },
  {
    "objectID": "projects/flower.html#mathematical-flower-activity-playlist",
    "href": "projects/flower.html#mathematical-flower-activity-playlist",
    "title": "Mathematical Flower Activity",
    "section": "Mathematical Flower Activity Playlist",
    "text": "Mathematical Flower Activity Playlist"
  },
  {
    "objectID": "projects/pidayparallel.html",
    "href": "projects/pidayparallel.html",
    "title": "Pi Day in Parallel",
    "section": "",
    "text": "In an earlier activity, you were able to approximate \\(\\pi\\) to two or three decimal places; however, it took quite a while for the computer to get to that level of precision.\nWe are going to try to find a faster way to estimate and, at the same time, reveal how many core processors our computer has."
  },
  {
    "objectID": "projects/pidayparallel.html#links-to-activity",
    "href": "projects/pidayparallel.html#links-to-activity",
    "title": "Pi Day in Parallel",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Pi Day in Parallel\nPi Day in Parallel Code Editor"
  },
  {
    "objectID": "projects/fluidmechanics.html#fluid-mechanics-interactive-video",
    "href": "projects/fluidmechanics.html#fluid-mechanics-interactive-video",
    "title": "Fluid Mechanics Interactive",
    "section": "Fluid Mechanics Interactive Video",
    "text": "Fluid Mechanics Interactive Video"
  },
  {
    "objectID": "projects/exo.html",
    "href": "projects/exo.html",
    "title": "Exoplanets",
    "section": "",
    "text": "As an extention ot the Slingshot with Gravity! activity, instead of keeping one object fixed (the sun) and letting the other move around it we are going to let BOTH objects move and see what happens. Letting both objects move is important, because many of the extra-solar planets (a.k.a. exoplanets) that we know about we only discovered because of the motion of the star that they are orbiting! So we will talk about the little white circle as a planet orbiting the sun instead of being something much smaller, like a comet or a satellite."
  },
  {
    "objectID": "projects/exo.html#links-to-activity",
    "href": "projects/exo.html#links-to-activity",
    "title": "Exoplanets",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Exoplanets\nCode for Exoplanets"
  },
  {
    "objectID": "projects/exo.html#exoplanets-playlist",
    "href": "projects/exo.html#exoplanets-playlist",
    "title": "Exoplanets",
    "section": "Exoplanets Playlist",
    "text": "Exoplanets Playlist"
  },
  {
    "objectID": "projects/planetoidsmomentum.html",
    "href": "projects/planetoidsmomentum.html",
    "title": "Planetoids with Momentum",
    "section": "",
    "text": "In a typical college physics course you will at some point encounter the idea of conservation of momentum. Momentum conservation is very important! In situations where two objects collide, we often don’t know the force or acceleration as a function of time, but we do know the initial velocities. If we know the type of collision that occurs, it turns out that the initial velocities and the masses of the objects are all we need to figure out the final velocities."
  },
  {
    "objectID": "projects/planetoidsmomentum.html#links-to-activity",
    "href": "projects/planetoidsmomentum.html#links-to-activity",
    "title": "Planetoids with Momentum",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Planetoids with Momentum\nCode Editor for Planetoids with Momentum"
  },
  {
    "objectID": "projects/planetoidsmomentum.html#planetoids-with-momentum-playlist",
    "href": "projects/planetoidsmomentum.html#planetoids-with-momentum-playlist",
    "title": "Planetoids with Momentum",
    "section": "Planetoids with Momentum Playlist",
    "text": "Planetoids with Momentum Playlist"
  },
  {
    "objectID": "projects/rc.html",
    "href": "projects/rc.html",
    "title": "RC Circuits",
    "section": "",
    "text": "This programming lab is unlike the previous ones in that it involves circuits. Specifically it involves circuits with a battery, a capacitor and one or two resistors."
  },
  {
    "objectID": "projects/rc.html#links-to-activity",
    "href": "projects/rc.html#links-to-activity",
    "title": "RC Circuits",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for RC Circuits\nRC Circuits Code Editor"
  },
  {
    "objectID": "projects/rc.html#rc-circuits-playlist",
    "href": "projects/rc.html#rc-circuits-playlist",
    "title": "RC Circuits",
    "section": "RC Circuits Playlist",
    "text": "RC Circuits Playlist"
  },
  {
    "objectID": "projects/solarcell.html#solar-cell-data-analysis-playlist",
    "href": "projects/solarcell.html#solar-cell-data-analysis-playlist",
    "title": "Solar Cell Data Analysis",
    "section": "Solar Cell Data Analysis Playlist",
    "text": "Solar Cell Data Analysis Playlist"
  },
  {
    "objectID": "projects/laser1.html",
    "href": "projects/laser1.html",
    "title": "Laser Defense Part 1",
    "section": "",
    "text": "Drones have become cheaper and cheaper which is increasingly a problem at airports because people sometimes fly them in the airspace near the planes. If a plane wre to run into a drone, bad things could happen\nThere are not a ton of choices to take down drones that wander into the air space of an airport. One could try to snare the drone with a net, but that can be complicated. One could try to shoot it down with a machine gun, but the bullets that miss eventually land somewhere.\nA promising option is to use a laser to shoot down the drone. Right now the technology is primarily used by the military but eventually it will be something that civilian airports can use.\nIn this activity we will consider drones that are moving in a straight line ner an air port. We will need to aim a laser system at the drone and get the focusing of the laser right to shoot down the drone. If we are pointing in the right direction, but the focal point is off then the intensity of the light won’t be high enough to damage the drone. This is a real effect."
  },
  {
    "objectID": "projects/laser1.html#links-to-activity",
    "href": "projects/laser1.html#links-to-activity",
    "title": "Laser Defense Part 1",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Laser Defense Part 1\nLaser Defense Part 1 Code Editor"
  },
  {
    "objectID": "projects/planetoidstorque.html",
    "href": "projects/planetoidstorque.html",
    "title": "Planetoids with Torque",
    "section": "",
    "text": "In this lab we will make the planetoids game more realistic by allowing the space craft to spin around as it would if it were really traveling in space. So in addition to a rocket engine that can propel the space craft forward, the ship will have thrusters on the front and back that can provide torque to spin the ship either the clockwise or counter-clockwise direction."
  },
  {
    "objectID": "projects/planetoidstorque.html#links-to-activity",
    "href": "projects/planetoidstorque.html#links-to-activity",
    "title": "Planetoids with Torque",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Planetoids with Torque\nPlanetouds with Torque Code Editor"
  },
  {
    "objectID": "projects/planetoidstorque.html#planetoids-with-torque-playlist",
    "href": "projects/planetoidstorque.html#planetoids-with-torque-playlist",
    "title": "Planetoids with Torque",
    "section": "Planetoids with Torque Playlist",
    "text": "Planetoids with Torque Playlist"
  },
  {
    "objectID": "projects/laser2.html",
    "href": "projects/laser2.html",
    "title": "Laser Defense Part 2",
    "section": "",
    "text": "Hopefully you completed Laser Defense (The Basic Game) and were able to add a laser to a simple code to damage an incoming drone. In this activity we are going to add code to catch the drone after it falls (explained in a moment). We are also going to add code to automate the targeting of the drone.\nAirport security is really happy with what you’ve done. The only problem is that when the drones hit the ground they are so mangled that it is hard to figure out who owns it or where it came from. They designed a rolling platform with a net to catch the drone before it can hit the ground. That is going to be a new challenge for the game. Ideally, there would be an automated system to catch the falling drone, so that is something to think about.\nThe other change in this activity is that we are going to use the arrow keys to change the angle of the laser instead of the x,y position of the focus. This is a bit more realistic. This also makes the game a bit harder. Later in the activity we will add code to automatically aim the laser at the drone so it is easier to damage the drones that are encroaching on our airspace."
  },
  {
    "objectID": "projects/laser2.html#links-to-activity",
    "href": "projects/laser2.html#links-to-activity",
    "title": "Laser Defense Part 2",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Laser Defense Part 2\nLaser Defense Part 2 Code Editor"
  },
  {
    "objectID": "projects/keplers.html",
    "href": "projects/keplers.html",
    "title": "Orbital Motion: Kepler’s Second Law",
    "section": "",
    "text": "This activity involves taking the code at the end of the Slingshot with Gravity exercise and doing some experiments with that code to learn more about the special properties of objects that are experiencing the gravitational pull from a central object. This central object can be a star or a black hole or a neutron star, etc. and the object in orbit can be a comet or an asteroid or a space capsule or even a whole planet. Usually this topic is connected to discussions of the motion of planets around a star.\nKepler made a number of important discoveries about the motion of the planets in the solar system. In the Slingshot with Gravity activity we created a code that demonstrated that 1/r2 forces like gravity naturally produce elliptical orbits. Hopefully you played around with that code to try to see if you could make orbits other than an ellipse. It turns out that as long as the object does not have enough kinetic energy to totally escape the gravitational field of the star it will produce some kind of elliptical orbit. Not only will the trajectory be an ellipse, the object will follow this same path every time it moves around the star. This result is often referred to as Kepler’s first law. Kepler was an astronomer who looked closely at the orbits of planets like Venus and Mars.\nIn this activity we will consider Kepler’s second law. Kepler’s second law has to do with how quickly the planet moves in its elliptical orbit. Kepler showed that the area that the planet “sweeps out” over some interval of time is the same regardless what part of the orbit the planet is in. If you’ve never heard of Kepler’s laws the sentence you just read about planets sweeping things out will probably not make much sense"
  },
  {
    "objectID": "projects/keplers.html#links-to-activity",
    "href": "projects/keplers.html#links-to-activity",
    "title": "Orbital Motion: Kepler’s Second Law",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Ortbital Motion: Kepler’s Second Law *Orbital Motion: Kepler’s Second Law Code Editor"
  },
  {
    "objectID": "projects/keplers.html#orbital-motion-keplers-second-law-playlist",
    "href": "projects/keplers.html#orbital-motion-keplers-second-law-playlist",
    "title": "Orbital Motion: Kepler’s Second Law",
    "section": "Orbital Motion: Kepler’s Second Law Playlist",
    "text": "Orbital Motion: Kepler’s Second Law Playlist"
  },
  {
    "objectID": "projects/conductor.html#conductor-interactive-video",
    "href": "projects/conductor.html#conductor-interactive-video",
    "title": "Conductor Interactive",
    "section": "Conductor Interactive Video",
    "text": "Conductor Interactive Video"
  },
  {
    "objectID": "projects/birds.html",
    "href": "projects/birds.html",
    "title": "Bellicose Birds",
    "section": "",
    "text": "We will configure the game to shoot a bird-shaped projectile. We call this game Bellicose Birds."
  },
  {
    "objectID": "projects/birds.html#links-to-activity",
    "href": "projects/birds.html#links-to-activity",
    "title": "Bellicose Birds",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Bellicose Birds\nCode Editor for Bellicose Birds"
  },
  {
    "objectID": "projects/birds.html#bellicose-birds-playlist",
    "href": "projects/birds.html#bellicose-birds-playlist",
    "title": "Bellicose Birds",
    "section": "Bellicose Birds Playlist",
    "text": "Bellicose Birds Playlist"
  },
  {
    "objectID": "projects/acceleratetheblob.html",
    "href": "projects/acceleratetheblob.html",
    "title": "Accelerate the Blob",
    "section": "",
    "text": "In real life, objects accelerate up to a particlar velocity. This exercise will show you how to modify the move the blob exercise so that the blob accelerates in response to the arrow keys, instead of the arrow keys directly controlling the velocity."
  },
  {
    "objectID": "projects/acceleratetheblob.html#links-to-activity",
    "href": "projects/acceleratetheblob.html#links-to-activity",
    "title": "Accelerate the Blob",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Accelerate the Blob\nCode Editor for Accelerate the Blob"
  },
  {
    "objectID": "projects/acceleratetheblob.html#accelerate-the-blob-videos",
    "href": "projects/acceleratetheblob.html#accelerate-the-blob-videos",
    "title": "Accelerate the Blob",
    "section": "Accelerate the Blob Videos",
    "text": "Accelerate the Blob Videos"
  },
  {
    "objectID": "projects/apollo.html",
    "href": "projects/apollo.html",
    "title": "Apollo Moon Landing",
    "section": "",
    "text": "The goal is to gently land the the little blob on the ground. Just for fun we will use the moon’s gravity instead of earth’s gravity. The result will be a lot like the Apollo moon landing."
  },
  {
    "objectID": "projects/apollo.html#links-to-activity",
    "href": "projects/apollo.html#links-to-activity",
    "title": "Apollo Moon Landing",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Apollo Moon Landing\nApollo Moon Landing Code Editor"
  },
  {
    "objectID": "projects/apollo.html#apollo-moon-landing-playlist",
    "href": "projects/apollo.html#apollo-moon-landing-playlist",
    "title": "Apollo Moon Landing",
    "section": "Apollo Moon Landing Playlist",
    "text": "Apollo Moon Landing Playlist"
  },
  {
    "objectID": "projects/figures.html#good-figures-vs.-bad-figures-playlist",
    "href": "projects/figures.html#good-figures-vs.-bad-figures-playlist",
    "title": "Good Figures vs. Bad Figures",
    "section": "Good Figures vs. Bad Figures Playlist",
    "text": "Good Figures vs. Bad Figures Playlist"
  },
  {
    "objectID": "projects/bonk.html",
    "href": "projects/bonk.html",
    "title": "Bonk.io Clone",
    "section": "",
    "text": "One of the most popular and entertaining .io games out there right now is bonk.io If you’ve not played it you should definitely check it out. The game is pretty simple. You’re a little ball and you bounce off the ground and various objects. You have some ability to affect your motion, but if you get bounced by some object or some other player so that you fly off the board you lose the game. It’s a little bit like sumo wrestling that way."
  },
  {
    "objectID": "projects/bonk.html#links-to-activity",
    "href": "projects/bonk.html#links-to-activity",
    "title": "Bonk.io Clone",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Bonk.io Clone\nCode Editor for Bonk.io Clone"
  },
  {
    "objectID": "projects/bonk.html#pong-and-bonk.io-playlist",
    "href": "projects/bonk.html#pong-and-bonk.io-playlist",
    "title": "Bonk.io Clone",
    "section": "Pong and Bonk.io Playlist",
    "text": "Pong and Bonk.io Playlist"
  },
  {
    "objectID": "projects/waveinterference.html",
    "href": "projects/waveinterference.html",
    "title": "Wave Interference",
    "section": "",
    "text": "This programming lab is designed to illustrate the idea of wave interference. This happens because of the principle of “superposition”. For sound waves, this 20 dollar word just means that if there are two speakers in a large room or open space, the amplitude of the sound waves at a particular point in that room are the sum of the waves of the two speakers."
  },
  {
    "objectID": "projects/waveinterference.html#links-to-activity",
    "href": "projects/waveinterference.html#links-to-activity",
    "title": "Wave Interference",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Wave Interferece\nWave Interference Code Editor"
  },
  {
    "objectID": "projects/waveinterference.html#wave-interference-playlist",
    "href": "projects/waveinterference.html#wave-interference-playlist",
    "title": "Wave Interference",
    "section": "Wave Interference Playlist",
    "text": "Wave Interference Playlist"
  },
  {
    "objectID": "projects/piday2.html",
    "href": "projects/piday2.html",
    "title": "Pi Day Part 2",
    "section": "",
    "text": "If you completed the Pi day activity and were surprised at how long it took to calculate the digits of π there is good news! There is a better way to calculate the digits of Pi!"
  },
  {
    "objectID": "projects/piday2.html#links-to-activity",
    "href": "projects/piday2.html#links-to-activity",
    "title": "Pi Day Part 2",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Pi Day Part 2\nPi Day Part 2 Code Editor"
  },
  {
    "objectID": "projects/piday2.html#pi-day-part-2-playlist",
    "href": "projects/piday2.html#pi-day-part-2-playlist",
    "title": "Pi Day Part 2",
    "section": "Pi Day Part 2 Playlist",
    "text": "Pi Day Part 2 Playlist"
  },
  {
    "objectID": "projects/electro.html",
    "href": "projects/electro.html",
    "title": "Electromagnetism: Unit System",
    "section": "",
    "text": "There are three issues that deserve mention: the length units (pretty simple), force units, and the electric field units (which is related to the force units)."
  },
  {
    "objectID": "projects/electro.html#links-to-activity",
    "href": "projects/electro.html#links-to-activity",
    "title": "Electromagnetism: Unit System",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Electromagnetism: Unit System"
  },
  {
    "objectID": "projects/earth.html",
    "href": "projects/earth.html",
    "title": "Earth Day",
    "section": "",
    "text": "We are going to estimate the impact of global warming at your location using a simple cosine function and some climate data."
  },
  {
    "objectID": "projects/earth.html#links-to-activity",
    "href": "projects/earth.html#links-to-activity",
    "title": "Earth Day",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Earth Day\nCode Editor for Earth Day"
  },
  {
    "objectID": "projects/earth.html#earth-day-playlist",
    "href": "projects/earth.html#earth-day-playlist",
    "title": "Earth Day",
    "section": "Earth Day Playlist",
    "text": "Earth Day Playlist"
  },
  {
    "objectID": "projects/nightsky.html",
    "href": "projects/nightsky.html",
    "title": "Night Sky Simulator",
    "section": "",
    "text": "Simulated Night Sky\nThe image above is not an actual picture of the night sky or any real star field (maybe you’ve already noticed that its a fake!). It is a randomly-generated night sky from a computer program we are going to build. We are going to learn a little bit about stars and then we are going to think about why some stars appear brighter in the sky than others and what it means.\nAn interesting thing about this activity is that you will be able to download a spreadsheet with the list of randomly generated stars. In the directions here we will use Google sheets to analyze that data but you can use any spreadsheet program you are comfortable with (Excel, Libreoffice, Apple – Numbers)"
  },
  {
    "objectID": "projects/nightsky.html#links-to-activity",
    "href": "projects/nightsky.html#links-to-activity",
    "title": "Night Sky Simulator",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Night Sky Simulator\nNight Sky Simulator Code Editor"
  },
  {
    "objectID": "projects/nightsky.html#night-sky-simulator-playlist",
    "href": "projects/nightsky.html#night-sky-simulator-playlist",
    "title": "Night Sky Simulator",
    "section": "Night Sky Simulator Playlist",
    "text": "Night Sky Simulator Playlist"
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html",
    "href": "EcologyLesson/formattingproblems/index.html",
    "title": "Formatting problems",
    "section": "",
    "text": "Teaching: 20 min\nExercises: 0 min\nQuestions\n\nWhat are some common challenges with formatting data in spreadsheets and how can we avoid them?\n\nObjectives\n\nRecognize and resolve common spreadsheet formatting problems."
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#overview",
    "href": "EcologyLesson/formattingproblems/index.html#overview",
    "title": "Formatting problems",
    "section": "",
    "text": "Teaching: 20 min\nExercises: 0 min\nQuestions\n\nWhat are some common challenges with formatting data in spreadsheets and how can we avoid them?\n\nObjectives\n\nRecognize and resolve common spreadsheet formatting problems."
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#common-spreadsheet-errors",
    "href": "EcologyLesson/formattingproblems/index.html#common-spreadsheet-errors",
    "title": "Formatting problems",
    "section": "Common Spreadsheet Errors",
    "text": "Common Spreadsheet Errors\nThis episode is meant to be used as a reference for discussion as learners identify issues with the messy dataset discussed in the previous episode.\nThere are a few potential errors to be on the lookout for in your own data as well as data from collaborators or the Internet. If you are aware of the errors and the possible negative effect on downstream data analysis and result interpretation, it might motivate yourself and your project members to try and avoid them. Making small changes to the way you format your data in spreadsheets can have a great impact on efficiency and reliability when it comes to data cleaning and analysis.\n\nUsing multiple tables\nUsing multiple tabs\nNot filling in zeros\nUsing problematic null values\nUsing formatting to convey information\nUsing formatting to make the data sheet look pretty\nPlacing comments or units in cells\nEntering more than one piece of information in a cell\nUsing problematic field names\nUsing special characters in data\nInclusion of metadata in data table\nDate formatting\n\n##Using multiple tables\nA common strategy is creating multiple data tables within one spreadsheet. This confuses the computer, so don’t do this! When you create multiple tables within one spreadsheet, you’re drawing false associations between things for the computer, which sees each row as an observation. You’re also potentially using the same field name in multiple places, which will make it harder to clean your data up into a usable form. The example below depicts the problem:\n\n\n\nmultiple tabs\n\n\nIn the example above, the computer will see (for example) row 4 and assume that all columns A-AF refer to the same sample. This row actually represents four distinct samples (sample 1 for each of four different collection dates - May 29th, June 12th, June 19th, and June 26th), as well as some calculated summary statistics (an average (avr) and standard error of measurement (SEM)) for two of those samples. Other rows are similarly problematic."
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#using-multiple-tabs",
    "href": "EcologyLesson/formattingproblems/index.html#using-multiple-tabs",
    "title": "Formatting problems",
    "section": "Using multiple tabs",
    "text": "Using multiple tabs\nBut what about workbook tabs? That seems like an easy way to organize data, right? Well, yes and no. When you create extra tabs, you fail to allow the computer to see connections in the data that are there (you have to introduce spreadsheet application-specific functions or scripting to ensure this connection). Say, for instance, you make a separate tab for each day you take a measurement.\nThis isn’t good practice for two reasons: 1) you are more likely to accidentally add inconsistencies to your data if each time you take a measurement, you start recording data in a new tab, and 2) even if you manage to prevent all inconsistencies from creeping in, you will add an extra step for yourself before you analyze the data because you will have to combine these data into a single datatable. You will have to explicitly tell the computer how to combine tabs - and if the tabs are inconsistently formatted, you might even have to do it manually.\nThe next time you’re entering data, and you go to create another tab or table, ask yourself if you could avoid adding this tab by adding another column to your original spreadsheet. We used multiple tabs in our example of a messy data file, but now you’ve seen how you can reorganize your data to consolidate across tabs.\nYour data sheet might get very long over the course of the experiment. This makes it harder to enter data if you can’t see your headers at the top of the spreadsheet. But don’t repeat your header row. These can easily get mixed into the data, leading to problems down the road.\nInstead you can freeze the column headers so that they remain visible even when you have a spreadsheet with many rows.\nDocumentation on how to freeze column headers in MS Excel"
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#not-filling-in-zeros",
    "href": "EcologyLesson/formattingproblems/index.html#not-filling-in-zeros",
    "title": "Formatting problems",
    "section": "Not filling in zeros",
    "text": "Not filling in zeros\nIt might be that when you’re measuring something, it’s usually a zero, say the number of times a rabbit is observed in the survey. Why bother writing in the number zero in that column, when it’s mostly zeros?\nHowever, there’s a difference between a zero and a blank cell in a spreadsheet. To the computer, a zero is actually data. You measured or counted it. A blank cell means that it wasn’t measured and the computer will interpret it as an unknown value (otherwise known as a null value).\nThe spreadsheets or statistical programs will likely mis-interpret blank cells that you intend to be zeros. By not entering the value of your observation, you are telling your computer to represent that data as unknown or missing (null). This can cause problems with subsequent calculations or analyses. For example, the average of a set of numbers which includes a single null value is always null (because the computer can’t guess the value of the missing observations). Because of this, it’s very important to record zeros as zeros and truly missing data as nulls."
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#using-problematic-null-values",
    "href": "EcologyLesson/formattingproblems/index.html#using-problematic-null-values",
    "title": "Formatting problems",
    "section": "Using problematic null values",
    "text": "Using problematic null values\nExample: using -999 or other numerical values (or zero) to represent missing data.\nSolutions:\nThere are a few reasons why null values get represented differently within a dataset. Sometimes confusing null values are automatically recorded from the measuring device. If that’s the case, there’s not much you can do, but it can be addressed in data cleaning with a tool like OpenRefine before analysis. Other times different null values are used to convey different reasons why the data isn’t there. This is important information to capture, but is in effect using one column to capture two pieces of information. Like for using formatting to convey information it would be good here to create a new column like ‘data_missing’ and use that column to capture the different reasons.\nWhatever the reason, it’s a problem if unknown or missing data is recorded as -999, 999, or 0. Many statistical programs will not recognize that these are intended to represent missing (null) values. How these values are interpreted will depend on the software you use to analyze your data. It is essential to use a clearly defined and consistent null indicator. Blanks (most applications) and NA (for R) are good choices. White et al, 2013, explain good choices for indicating null values for different software applications in their article: Nine simple ways to make it easier to (re)use your data."
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#using-formatting-to-convey-information",
    "href": "EcologyLesson/formattingproblems/index.html#using-formatting-to-convey-information",
    "title": "Formatting problems",
    "section": "Using formatting to convey information",
    "text": "Using formatting to convey information\nExample: highlighting cells, rows or columns that should be excluded from an analysis, leaving blank rows to indicate separations in data.\n\nSolution: create a new field to encode which data should be excluded."
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#using-formatting-to-make-the-data-sheet-look-pretty",
    "href": "EcologyLesson/formattingproblems/index.html#using-formatting-to-make-the-data-sheet-look-pretty",
    "title": "Formatting problems",
    "section": "Using formatting to make the data sheet look pretty",
    "text": "Using formatting to make the data sheet look pretty\nExample: merging cells.\nSolution: If you’re not careful, formatting a worksheet to be more aesthetically pleasing can compromise your computer’s ability to see associations in the data. Merged cells will make your data unreadable by statistics software. Consider restructuring your data in such a way that you will not need to merge cells to organize your data."
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#placing-comments-or-units-in-cells",
    "href": "EcologyLesson/formattingproblems/index.html#placing-comments-or-units-in-cells",
    "title": "Formatting problems",
    "section": "Placing comments or units in cells",
    "text": "Placing comments or units in cells\nExample: Your data was collected, in part, by a summer student who you later found out was mis-identifying some of your species, some of the time. You want a way to note these data are suspect.\nSolution: Most analysis software can’t see Excel or LibreOffice comments, and would be confused by comments placed within your data cells. As described above for formatting, create another field if you need to add notes to cells. Similarly, don’t include units in cells: ideally, all the measurements you place in one column should be in the same unit, but if for some reason they aren’t, create another field and specify the units the cell is in."
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#entering-more-than-one-piece-of-information-in-a-cell",
    "href": "EcologyLesson/formattingproblems/index.html#entering-more-than-one-piece-of-information-in-a-cell",
    "title": "Formatting problems",
    "section": "Entering more than one piece of information in a cell",
    "text": "Entering more than one piece of information in a cell\nExample: You find one male, and one female of the same species. You enter this as 1M, 1F.\nSolution: Don’t include more than one piece of information in a cell. This will limit the ways in which you can analyze your data. If you need both these measurements, design your data sheet to include this information. For example, include one column for number of individuals and a separate column for sex."
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#using-problematic-field-names",
    "href": "EcologyLesson/formattingproblems/index.html#using-problematic-field-names",
    "title": "Formatting problems",
    "section": "Using problematic field names",
    "text": "Using problematic field names\nChoose descriptive field names, but be careful not to include spaces, numbers, or special characters of any kind. Spaces can be misinterpreted by parsers that use whitespace as delimiters and some programs don’t like field names that are text strings that start with numbers.\nUnderscores (_) are a good alternative to spaces. Consider writing names in camel case (like this: ExampleFileName) to improve readability. Remember that abbreviations that make sense at the moment may not be so obvious in 6 months, but don’t overdo it with names that are excessively long. Including the units in the field names avoids confusion and enables others to readily interpret your fields.\nExamples\nGood Name |Good Alternative| Avoid |\n|******|*******|*******| | Max_temp_C | MaxTemp | Maximum Temp (°C) | | Precipitation_mm | Precipitation | precmm | | Mean_year_growth | MeanYearGrowth | Mean growth/year | | sex | sex | M/F | | weight | weight | w. | | cell_type | CellType | Cell Type | | Observation_01 | first_observation | 1st Obs |"
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#using-special-characters-in-data",
    "href": "EcologyLesson/formattingproblems/index.html#using-special-characters-in-data",
    "title": "Formatting problems",
    "section": "Using special characters in data",
    "text": "Using special characters in data\nExample: You treat your spreadsheet program as a word processor when writing notes, for example copying data directly from Word or other applications.\nSolution: This is a common strategy. For example, when writing longer text in a cell, people often include line breaks, em-dashes, etc in their spreadsheet. Also, when copying data in from applications such as Word, formatting and fancy non-standard characters (such as left- and right-aligned quotation marks) are included. When exporting this data into a coding/statistical environment or into a relational database, dangerous things may occur, such as lines being cut in half and encoding errors being thrown.\nGeneral best practice is to avoid adding characters such as newlines, tabs, and vertical tabs. In other words, treat a text cell as if it were a simple web form that can only contain text and spaces."
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#inclusion-of-metadata-in-data-table",
    "href": "EcologyLesson/formattingproblems/index.html#inclusion-of-metadata-in-data-table",
    "title": "Formatting problems",
    "section": "Inclusion of metadata in data table",
    "text": "Inclusion of metadata in data table\nExample: You add a legend at the top or bottom of your data table explaining column meaning, units, exceptions, etc.\nSolution: Recording data about your data (“metadata”) is essential. You may be on intimate terms with your dataset while you are collecting and analysing it, but the chances that you will still remember that the variable “sglmemgp” means single member of group, for example, or the exact algorithm you used to transform a variable or create a derived one, after a few months, a year, or more are slim.\nAs well, there are many reasons other people may want to examine or use your data - to understand your findings, to verify your findings, to review your submitted publication, to replicate your results, to design a similar study, or even to archive your data for access and re-use by others. While digital data by definition are machine-readable, understanding their meaning is a job for human beings. The importance of documenting your data during the collection and analysis phase of your research cannot be overestimated, especially if your research is going to be part of the scholarly record.\nHowever, metadata should not be contained in the data file itself. Unlike a table in a paper or a supplemental file, metadata (in the form of legends) should not be included in a data file since this information is not data, and including it can disrupt how computer programs interpret your data file. Rather, metadata should be stored as a separate file in the same directory as your data file, preferably in plain text format with a name that clearly associates it with your data file. Because metadata files are free text format, they also allow you to encode comments, units, information about how null values are encoded, etc. that are important to document but can disrupt the formatting of your data file.\nAdditionally, file or database level metadata describes how files that make up the dataset relate to each other; what format are they are in; and whether they supercede or are superceded by previous files. A folder-level readme.txt file is the classic way of accounting for all the files and folders in a project.\n(Text on metadata adapted from the online course Research Data MANTRA by EDINA and Data Library, University of Edinburgh. MANTRA is licensed under a Creative Commons Attribution 4.0 International License.)"
  },
  {
    "objectID": "EcologyLesson/formattingproblems/index.html#key-points",
    "href": "EcologyLesson/formattingproblems/index.html#key-points",
    "title": "Formatting problems",
    "section": "Key Points",
    "text": "Key Points\n\nAvoid using multiple tables within one spreadsheet.\nAvoid spreading data across multiple tabs.\nRecord zeros as zeros.\nUse an appropriate null value to record missing data.\nDon’t use formatting to convey information or to make your spreadsheet look pretty.\nPlace comments in a separate column.\nRecord units in column headers.\nInclude only one piece of information in a cell.\nAvoid spaces, numbers and special characters in column headers.\nAvoid special characters in your data.\nRecord metadata in a separate plain text file.\n\nLicensed under CC-BY 4.0 2018–2022 by The Carpentries\nLicensed under CC-BY 4.0 2016–2018 by Data Carpentry"
  },
  {
    "objectID": "EcologyLesson/formattingtables/index.html",
    "href": "EcologyLesson/formattingtables/index.html",
    "title": "Formatting data tables in Spreadsheets",
    "section": "",
    "text": "Teaching: 15 min\nExercises: 20 min\nQuestions\n\nHow do we format data in spreadsheets for effective data use?\n\nObjectives\n\nDescribe best practices for data entry and formatting in spreadsheets.\nApply best practices to arrange variables and observations in a spreadsheet.\n\n\nThe most common mistake made is treating spreadsheet programs like lab notebooks, that is, relying on context, notes in the margin, spatial layout of data and fields to convey information. As humans, we can (usually) interpret these things, but computers don’t view information the same way, and unless we explain to the computer what every single thing means (and that can be hard!), it will not be able to see how our data fits together.\nUsing the power of computers, we can manage and analyze data in much more effective and faster ways, but to use that power, we have to set up our data for the computer to be able to understand it (and computers are very literal).\nThis is why it’s extremely important to set up well-formatted tables from the outset - before you even start entering data from your very first preliminary experiment. Data organization is the foundation of your research project. It can make it easier or harder to work with your data throughout your analysis, so it’s worth thinking about when you’re doing your data entry or setting up your experiment. You can set things up in different ways in spreadsheets, but some of these choices can limit your ability to work with the data in other programs or have the you-of-6-months-from-now or your collaborator work with the data.\n\n\nThe best layouts/formats (as well as software and interfaces) for data entry and data analysis might be different. It is important to take this into account, and ideally automate the conversion from one to another."
  },
  {
    "objectID": "EcologyLesson/formattingtables/index.html#overview",
    "href": "EcologyLesson/formattingtables/index.html#overview",
    "title": "Formatting data tables in Spreadsheets",
    "section": "",
    "text": "Teaching: 15 min\nExercises: 20 min\nQuestions\n\nHow do we format data in spreadsheets for effective data use?\n\nObjectives\n\nDescribe best practices for data entry and formatting in spreadsheets.\nApply best practices to arrange variables and observations in a spreadsheet.\n\n\nThe most common mistake made is treating spreadsheet programs like lab notebooks, that is, relying on context, notes in the margin, spatial layout of data and fields to convey information. As humans, we can (usually) interpret these things, but computers don’t view information the same way, and unless we explain to the computer what every single thing means (and that can be hard!), it will not be able to see how our data fits together.\nUsing the power of computers, we can manage and analyze data in much more effective and faster ways, but to use that power, we have to set up our data for the computer to be able to understand it (and computers are very literal).\nThis is why it’s extremely important to set up well-formatted tables from the outset - before you even start entering data from your very first preliminary experiment. Data organization is the foundation of your research project. It can make it easier or harder to work with your data throughout your analysis, so it’s worth thinking about when you’re doing your data entry or setting up your experiment. You can set things up in different ways in spreadsheets, but some of these choices can limit your ability to work with the data in other programs or have the you-of-6-months-from-now or your collaborator work with the data.\n\n\nThe best layouts/formats (as well as software and interfaces) for data entry and data analysis might be different. It is important to take this into account, and ideally automate the conversion from one to another."
  },
  {
    "objectID": "EcologyLesson/formattingtables/index.html#keeping-track-of-your-analyses",
    "href": "EcologyLesson/formattingtables/index.html#keeping-track-of-your-analyses",
    "title": "Formatting data tables in Spreadsheets",
    "section": "Keeping track of your analyses",
    "text": "Keeping track of your analyses\nWhen you’re working with spreadsheets, during data clean up or analyses, it’s very easy to end up with a spreadsheet that looks very different from the one you started with. In order to be able to reproduce your analyses or figure out what you did when a fellow reseacher or a lead researcher asks for a different analysis, you should\ncreate a new file with your cleaned or analyzed data. Don’t modify the original dataset, or you will never know where you started! keep track of the steps you took in your clean up or analysis. You should track these steps as you would any step in an experiment. We recommend that you do this in a plain text file stored in the same folder as the data file. This might be an example of a spreadsheet setup:\n\nPut these principles in to practice today during your Exercises."
  },
  {
    "objectID": "EcologyLesson/formattingtables/index.html#structuring-data-in-spreadsheets",
    "href": "EcologyLesson/formattingtables/index.html#structuring-data-in-spreadsheets",
    "title": "Formatting data tables in Spreadsheets",
    "section": "Structuring data in spreadsheets",
    "text": "Structuring data in spreadsheets\nThe cardinal rule of using spreadsheet programs for data is to keep it “tidy”:\nPut all your variables in columns - the thing you’re measuring, like ‘weight’ or ‘temperature’. Put each observation in its own row. Don’t combine multiple pieces of information in one cell. Sometimes it just seems like one thing, but think if that’s the only way you’ll want to be able to use or sort that data. Leave the raw data raw - don’t change it! Export the cleaned data to a text-based format like CSV (comma-separated values) format. This ensures that anyone can use the data, and is required by most data repositories. For instance, we have data from a survey of small mammals in a desert ecosystem. Different people have gone to the field and entered data into a spreadsheet. They keep track of things like species, plot, weight, sex and date collected.\nIf they were to keep track of the data like this:\n\nthe problem is that species and sex are in the same field. So, if they wanted to look at all of one species or look at different weight distributions by sex, it would be hard to do this using this data setup. If instead we put sex and species in different columns, you can see that it would be much easier."
  },
  {
    "objectID": "EcologyLesson/formattingtables/index.html#columns-for-variables-and-rows-for-observations",
    "href": "EcologyLesson/formattingtables/index.html#columns-for-variables-and-rows-for-observations",
    "title": "Formatting data tables in Spreadsheets",
    "section": "Columns for variables and rows for observations",
    "text": "Columns for variables and rows for observations\nThe rule of thumb, when setting up a datasheet, is columns = variables, rows = observations, cells = data (values).\nSo, instead we should have:\n\n\nDiscussion\nIf not already discussed, introduce the dataset that will be used in this lesson, and in the other ecology lessons, the Portal Project Teaching Dataset.\nThe data used in the ecology lessons are observations of a small mammal community in southern Arizona. This is part of a project studying the effects of rodents and ants on the plant community that has been running for almost 40 years. The rodents are sampled on a series of 24 plots, with different experimental manipulations controlling which rodents are allowed to access which plots.\nThis is a real dataset that has been used in over 100 publications. We’ve simplified it just a little bit for the workshop, but you can download the full dataset and work with it using exactly the same tools we’ll learn about today.\n\n\nExercise\nWe’re going to take a messy version of the survey data and describe how we would clean it up.\n\nDownload the data by clicking here to get it from FigShare.\nOpen up the data in a spreadsheet program.\nYou can see that there are two tabs. Two field assistants conducted the surveys, one in 2013 and one in 2014, and they both kept track of the data in their own way in tabs 2013 and 2014 of the dataset, respectively. Now you’re the person in charge of this project and you want to be able to start analyzing the data.\nWith the person next to you, identify what is wrong with this spreadsheet. Also discuss the steps you would need to take to clean up the 2013 and 2014 tabs, and to put them all together in one spreadsheet.\n\nImportant Do not forget our first piece of advice: to create a new file (or tab) for the cleaned data, never modify your original (raw) data. After you go through this exercise, we’ll discuss as a group what was wrong with this data and how you would fix it.\nThere are excellent references to help you work with data in spreadsheets. These include:\nRegarding R scripting;\nHadley Wickham, Tidy Data, Vol. 59, Issue 10, Sep 2014, Journal of Statistical Software. http://www.jstatsoft.org/v59/i10.\nAppropriately Regarding Data organization in spreadsheets;\nBroman KW, Woo KH. 2018. Data organization in spreadsheets. PeerJ Preprints 6:e3183v2 Data organization in spreadsheets."
  },
  {
    "objectID": "EcologyLesson/formattingtables/index.html#key-points",
    "href": "EcologyLesson/formattingtables/index.html#key-points",
    "title": "Formatting data tables in Spreadsheets",
    "section": "Key Points",
    "text": "Key Points\n\nNever modify your raw data. Always make a copy before making any changes.\nKeep track of all of the steps you take to clean your data in a plain text file.\nOrganize your data according to tidy data principles.\n\nLicensed under CC-BY 4.0 2018–2022 by The Carpentries\nLicensed under CC-BY 4.0 2016–2018 by Data Carpentry"
  },
  {
    "objectID": "EcologyLesson/datesasdata/index.html",
    "href": "EcologyLesson/datesasdata/index.html",
    "title": "Dates as data",
    "section": "",
    "text": "Teaching: 10 min\nExercises: 3 min\nQuestions\n\nWhat are good approaches for handling dates in spreadsheets?\n\nObjectives\n\nDescribe how dates are stored and formatted in spreadsheets.\nDescribe the advantages of alternative date formatting in spreadsheets.\nDemonstrate best practices for entering dates in spreadsheets.\n\n\nDates in spreadsheets can be a problem. For one thing, dates are stored in a single column. While this seems the most natural way to record dates, it actually is not best practice. A spreadsheet application will display the dates in a seemingly correct way (to a human observer) but how it actually handles and stores the dates may be problematic.\nIn particular, please remember that DATE functions that are valid for a given spreadsheet program (be it LibreOffice Calc, Microsoft Excel, OpenOffice, Gnumeric, etc.) DATE functions are usually guaranteed to be compatible only within the same family of products. Most of the images of spreadsheets in this lesson come from Microsoft Excel, run on a Mac or on Windows. Regardless of your spreadsheet, if you will later need to export the data and need to conserve the timestamps, you are better off handling them using one of the solutions discussed below.\nOne of the big problems with Excel is it can turn things that aren’t dates into dates, for example gene/protein names or identifiers like MAR1, DEC1, OCT4 will be changed to dates, and you cannot retreive the original name or identifier (except manually). So if you avoid the date format overall, it’s easier to work with these types of data. When you must work with dates, here is how to do it efficiently."
  },
  {
    "objectID": "EcologyLesson/datesasdata/index.html#overview",
    "href": "EcologyLesson/datesasdata/index.html#overview",
    "title": "Dates as data",
    "section": "",
    "text": "Teaching: 10 min\nExercises: 3 min\nQuestions\n\nWhat are good approaches for handling dates in spreadsheets?\n\nObjectives\n\nDescribe how dates are stored and formatted in spreadsheets.\nDescribe the advantages of alternative date formatting in spreadsheets.\nDemonstrate best practices for entering dates in spreadsheets.\n\n\nDates in spreadsheets can be a problem. For one thing, dates are stored in a single column. While this seems the most natural way to record dates, it actually is not best practice. A spreadsheet application will display the dates in a seemingly correct way (to a human observer) but how it actually handles and stores the dates may be problematic.\nIn particular, please remember that DATE functions that are valid for a given spreadsheet program (be it LibreOffice Calc, Microsoft Excel, OpenOffice, Gnumeric, etc.) DATE functions are usually guaranteed to be compatible only within the same family of products. Most of the images of spreadsheets in this lesson come from Microsoft Excel, run on a Mac or on Windows. Regardless of your spreadsheet, if you will later need to export the data and need to conserve the timestamps, you are better off handling them using one of the solutions discussed below.\nOne of the big problems with Excel is it can turn things that aren’t dates into dates, for example gene/protein names or identifiers like MAR1, DEC1, OCT4 will be changed to dates, and you cannot retreive the original name or identifier (except manually). So if you avoid the date format overall, it’s easier to work with these types of data. When you must work with dates, here is how to do it efficiently."
  },
  {
    "objectID": "EcologyLesson/datesasdata/index.html#exercise",
    "href": "EcologyLesson/datesasdata/index.html#exercise",
    "title": "Dates as data",
    "section": "Exercise",
    "text": "Exercise\nChallenge: pulling month, day and year out of dates\n\nLet’s create a tab called dates in our data spreadsheet and copy the ‘plot 3’ table from the 2014 tab (that contains the problematic dates).\nLet’s extract month, day and year from the dates in the Date collected column into new columns. For this we can use the following built-in Excel functions:\n\nYEAR()\nMONTH()\nDAY()\n(Make sure the new columns are formatted as a number and not as a date.)\nYou can see that even though we expected the year to be 2014, the year is actually 2015. What happened here is that the field assistant who collected the data for year 2014 initially forgot to include their data for ‘plot 3’ in this dataset. They came back in 2015 to add the missing data into the dataset and entered the dates for ‘plot 3’ without the year. Excel automatically interpreted the year as 2015 - the year the data was entered into the spreadsheet and not the year the data was collected. Thereby, the spreadsheet program introduced an error in the dataset without the field assistant realising."
  },
  {
    "objectID": "EcologyLesson/datesasdata/index.html#exercise-1",
    "href": "EcologyLesson/datesasdata/index.html#exercise-1",
    "title": "Dates as data",
    "section": "Exercise",
    "text": "Exercise\nChallenge: pulling hour, minute and second out of the current time\nCurrent time and date are best retrieved using the functions NOW(), which returns the current date and time, and TODAY(), which returns the current date. The results will be formatted according to your computer’s settings.\n\nExtract the year, month and day from the current date and time string returned by the NOW() function.\nCalculate the current time using NOW()-TODAY().\nExtract the hour, minute and second from the current time using functions HOUR(), MINUTE() and SECOND().\nPress F9 to force the spreadsheet to recalculate the NOW() function, and check that it has been updated."
  },
  {
    "objectID": "EcologyLesson/datesasdata/index.html#preferred-date-format",
    "href": "EcologyLesson/datesasdata/index.html#preferred-date-format",
    "title": "Dates as data",
    "section": "Preferred date format",
    "text": "Preferred date format\nIt is much safer to store dates with YEAR, MONTH, DAY in separate columns or as YEAR and DAY-OF-YEAR in separate columns.\nNote: Excel is unable to parse dates from before 1899-12-31, and will thus leave these untouched. If you’re mixing historic data from before and after this date, Excel will translate only the post-1900 dates into its internal format, thus resulting in mixed data. If you’re working with historic data, be extremely careful with your dates!\nExcel also entertains a second date system, the 1904 date system, as the default in Excel for Macintosh. This system will assign a different serial number than the 1900 date system. Because of this, dates must be checked for accuracy when exporting data from Excel (look for dates that are ~4 years off)."
  },
  {
    "objectID": "EcologyLesson/datesasdata/index.html#date-formats-in-spreadsheets",
    "href": "EcologyLesson/datesasdata/index.html#date-formats-in-spreadsheets",
    "title": "Dates as data",
    "section": "Date formats in spreadsheets",
    "text": "Date formats in spreadsheets\nSpreadsheet programs have numerous “useful features” which allow them to handle dates in a variety of ways.\n\n\n\nMany formats, many ambiguities\n\n\nBut these “features” often allow ambiguity to creep into your data. Ideally, data should be as unambiguous as possible."
  },
  {
    "objectID": "EcologyLesson/datesasdata/index.html#dates-stored-as-integers",
    "href": "EcologyLesson/datesasdata/index.html#dates-stored-as-integers",
    "title": "Dates as data",
    "section": "Dates stored as integers",
    "text": "Dates stored as integers\nThe first thing you need to know is that Excel stores dates as numbers - see the last column in the above figure. Essentially, it counts the days from a default of December 31, 1899, and thus stores July 2, 2014 as the serial number 41822.\n(But wait. That’s the default on my version of Excel. We’ll get into how this can introduce problems down the line later in this lesson. )\nThis serial number thing can actually be useful in some circumstances. By using the above functions we can easily add days, months or years to a given date. Say you had a sampling plan where you needed to sample every thirty seven days. In another cell, you could type:\n=B2+37\nAnd it would return\n8-Aug\nbecause it understands the date as a number 41822, and 41822 + 37 = 41859 which Excel interprets as August 8, 2014. It retains the format (for the most part) of the cell that is being operated upon, (unless you did some sort of formatting to the cell before, and then all bets are off). Month and year rollovers are internally tracked and applied.\nNote Adding years and months and days is slightly trickier because we need to make sure that we are adding the amount to the correct entity.\n\nFirst we extract the single entities (day, month or year)\nWe can then add values to do that\nFinally the complete date string is reconstructed using the DATE() function.\n\nAs for dates, times are handled in a similar way; seconds can be directly added but to add hour and minutes we need to make sure that we are adding the quantities to the correct entities.\nWhich brings us to the many different ways Excel provides in how it displays dates. If you refer to the figure above, you’ll see that there are many ways that ambiguity creeps into your data depending on the format you chose when you enter your data, and if you’re not fully aware of which format you’re using, you can end up actually entering your data in a way that Excel will badly misinterpret and you will end up with errors in your data that will be extremely difficult to track down and troubleshoot.\n\nExercise\nWhat happens to the dates in the dates tab of our workbook if we save this sheet in Excel (in csv format) and then open the file in a plain text editor (like TextEdit or Notepad)? What happens to the dates if we then open the csv file in Excel?\n\nNote\nYou will notice that when exporting into a text-based format (such as CSV), Excel will export its internal date integer instead of a useful value (that is, the dates will be represented as integer numbers). This can potentially lead to problems if you use other software to manipulate the file."
  },
  {
    "objectID": "EcologyLesson/datesasdata/index.html#advantages-of-alternative-date-formatting",
    "href": "EcologyLesson/datesasdata/index.html#advantages-of-alternative-date-formatting",
    "title": "Dates as data",
    "section": "Advantages of Alternative Date Formatting",
    "text": "Advantages of Alternative Date Formatting\nStoring dates as YEAR, MONTH, DAY\nStoring dates in YEAR, MONTH, DAY format helps remove this ambiguity. Let’s look at this issue a bit closer.\nFor instance this is a spreadsheet representing insect counts that were taken every few days over the summer, and things went something like this:\n\n\n\nSo, so ambiguous, it’s even confusing Excel\n\n\nIf Excel was to be believed, this person had been collecting bugs in the future. Now, we have no doubt this person is highly capable, but I believe time travel was beyond even their grasp.\nEntering dates in one cell is helpful but due to the fact that the spreadsheet programs may interpret and save the data in different ways (doing that somewhat behind the scenes), there is a better practice.\nIn dealing with dates in spreadsheets, separate date data into separate fields (day, month, year), which will eliminate any chance of ambiguity."
  },
  {
    "objectID": "EcologyLesson/datesasdata/index.html#storing-dates-as-year-day-of-year",
    "href": "EcologyLesson/datesasdata/index.html#storing-dates-as-year-day-of-year",
    "title": "Dates as data",
    "section": "Storing dates as YEAR, DAY-OF-YEAR",
    "text": "Storing dates as YEAR, DAY-OF-YEAR\nThere is also another option. You can also store dates as year and day of year (DOY). Why? Because depending on your question, this might be what’s useful to you, and there is practically no possibility for ambiguity creeping in.\nStatistical models often incorporate year as a factor, or a categorical variable, rather than a numeric variable, to account for year-to-year variation, and DOY can be used to measure the passage of time within a year.\nSo, can you convert all your dates into DOY format? Well, in Excel, here’s a useful guide:\n\n\n\nKill that ambiguity before it bites you!"
  },
  {
    "objectID": "EcologyLesson/datesasdata/index.html#storing-dates-as-a-single-string",
    "href": "EcologyLesson/datesasdata/index.html#storing-dates-as-a-single-string",
    "title": "Dates as data",
    "section": "Storing dates as a single string",
    "text": "Storing dates as a single string\nAnother alternative could be to convert the date string into a single string using the YYYYMMDD format. For example the date March 24, 2015 would become 20150324. This option also works for datetimes using the YYYYMMDDhhmmss format. So the datetime March 24, 2015 17:25:35 would become 20150324172535, where:\n\nYYYY: the full year, i.e. 2015\nMM: the month, i.e. 03\nDD: the day of month, i.e. 24\nhh: hour of day, i.e. 17\nmm: minutes, i.e. 25\nss: seconds, i.e. 35\n\nSuch strings will be correctly sorted in ascending or descending order, and by knowing the format they can then be correctly processed by the receiving software."
  },
  {
    "objectID": "EcologyLesson/datesasdata/index.html#key-points",
    "href": "EcologyLesson/datesasdata/index.html#key-points",
    "title": "Dates as data",
    "section": "Key Points",
    "text": "Key Points\n\nTreating dates as multiple pieces of data rather than one makes them easier to handle.\n\nLicensed under CC-BY 4.0 2018–2022 by The Carpentries\nLicensed under CC-BY 4.0 2016–2018 by Data Carpentry"
  },
  {
    "objectID": "EcologyLesson/qualitycontrol/index.html",
    "href": "EcologyLesson/qualitycontrol/index.html",
    "title": "Quality control",
    "section": "",
    "text": "Teaching: 20 min\nExercises: 0 min\nQuestions\n\nHow can we carry out basic quality control and quality assurance in spreadsheets?\n\nObjectives\n\nApply quality control techniques to identify errors in spreadsheets and limit incorrect data entry.\n\n\nWhen you have a well-structured data table, you can use several simple techniques within your spreadsheet to ensure the data you enter is free of errors. These approaches include techniques that are implemented prior to entering data (quality assurance) and techniques that are used after entering data to check for errors (quality control)."
  },
  {
    "objectID": "EcologyLesson/qualitycontrol/index.html#overview",
    "href": "EcologyLesson/qualitycontrol/index.html#overview",
    "title": "Quality control",
    "section": "",
    "text": "Teaching: 20 min\nExercises: 0 min\nQuestions\n\nHow can we carry out basic quality control and quality assurance in spreadsheets?\n\nObjectives\n\nApply quality control techniques to identify errors in spreadsheets and limit incorrect data entry.\n\n\nWhen you have a well-structured data table, you can use several simple techniques within your spreadsheet to ensure the data you enter is free of errors. These approaches include techniques that are implemented prior to entering data (quality assurance) and techniques that are used after entering data to check for errors (quality control)."
  },
  {
    "objectID": "EcologyLesson/qualitycontrol/index.html#quality-assurance",
    "href": "EcologyLesson/qualitycontrol/index.html#quality-assurance",
    "title": "Quality control",
    "section": "Quality Assurance",
    "text": "Quality Assurance\nQuality assurance stops bad data from ever being entered by checking to see if values are valid during data entry. For example, if research is being conducted at sites A, B, and C, then the value V (which is right next to B on the keyboard) should never be entered. Likewise if one of the kinds of data being collected is a count, only integers greater than or equal to zero should be allowed.\nTo control the kind of data entered into a spreadsheet we use Data Validation (Excel) or Validity (Libre Office Calc), to set the values that can be entered in each data column.\n\nSelect the cells or column you want to validate\nOn the Data tab select Data Validation\n\n\n\nIn the Allow box select the kind of data that should be in the column. Options include whole numbers, decimals, lists of items, dates, and other values.\n\n\n\nAfter selecting an item enter any additional details. For example, if you’ve chosen a list of values, enter a comma-delimited or semi-colon list of allowable values in the Source box.\n\nLet’s try this out by setting the plot column in our spreadsheet to only allow plot values that are integers between 1 and 24.\n\nSelect the 1plot_id1 column\nOn the Data tab select Data Validation\nIn the Allow box select Whole number\nSet the minimum and maximum values to 1 and 24.\n\n\nNow let’s try entering a new value in the plot column that isn’t a valid plot. The spreadsheet stops us from entering the wrong value and asks us if we would like to try again.\n\nYou can also customize the resulting message to be more informative by entering your own message in the Input Message tab\n\nor allow invalid data to result in a warning rather than an error by modifying the Style option on the Error Alert tab.\n\nQuality assurance can make data entry easier as well as more robust. For example, if you use a list of options to restrict data entry, the spreadsheet will provide you with a drop-downlist of the available items. So, instead of trying to remember how to spell Dipodomys spectabilis, you can select the right option from the list."
  },
  {
    "objectID": "EcologyLesson/qualitycontrol/index.html#quality-control",
    "href": "EcologyLesson/qualitycontrol/index.html#quality-control",
    "title": "Quality control",
    "section": "Quality Control",
    "text": "Quality Control\nTip: Before doing any quality control operations, save your original file with the formulas and a name indicating it is the original data. Create a separate file with appropriate naming and versioning, and ensure your data is stored as values and not as formulas. Because formulas refer to other cells, and you may be moving cells around, you may compromise the integrity of your data if you do not take this step!\nreadMe (README) files: As you start manipulating your data files, create a readMe document / text file to keep track of your files and document your manipulations so that they may be easily understood and replicated, either by your future self or by an independent researcher. Your readMe file should document all of the files in your data set (including documentation), describe their content and format, and lay out the organizing principles of folders and subfolders. For each of the separate files listed, it is a good idea to document the manipulations or analyses that were carried out on those data. Cornell University’s Research Data Management Service Group provides detailed guidelines for how to write a good readMe file, along with an adaptable template."
  },
  {
    "objectID": "EcologyLesson/qualitycontrol/index.html#sorting",
    "href": "EcologyLesson/qualitycontrol/index.html#sorting",
    "title": "Quality control",
    "section": "Sorting",
    "text": "Sorting\nBad values often sort to the bottom or top of the column. For example, if your data should be numeric, then alphabetical and null data will group at the ends of the sorted data. Sort your data by each field, one at a time. Scan through each column, but pay the most attention to the top and the bottom of a column. If your dataset is well-structured and does not contain formulas, sorting should never affect the integrity of your dataset.\nRemember to expand your sort in order to prevent data corruption. Expanding your sort ensures that the all the data in one row move together instead of only sorting a single column in isolation. Sorting by only a single column will scramble your data - a single row will no longer represent an individual observation."
  },
  {
    "objectID": "EcologyLesson/qualitycontrol/index.html#exercise",
    "href": "EcologyLesson/qualitycontrol/index.html#exercise",
    "title": "Quality control",
    "section": "Exercise",
    "text": "Exercise\nWe’ve combined all of the tables from the messy data into a single table in a single tab. Download this semi-cleaned data file to your computer: survey_sorting_exercise\nOnce downloaded, sort the Weight_grams column in your spreadsheet program from Largest to Smallest.\nWhat do you notice?"
  },
  {
    "objectID": "EcologyLesson/qualitycontrol/index.html#conditional-formatting",
    "href": "EcologyLesson/qualitycontrol/index.html#conditional-formatting",
    "title": "Quality control",
    "section": "Conditional formatting",
    "text": "Conditional formatting\nConditional formatting basically can do something like color code your values by some criteria or lowest to highest. This makes it easy to scan your data for outliers.\nConditional formatting should be used with caution, but it can be a great way to flag inconsistent values when entering data.\n\nExercise\n\nMake sure the Weight_grams column is highlighted.\nIn the main Excel menu bar, click Home &gt; Conditional Formatting... choose a formatting rule.\nApply any 2-Color Scale formatting rule.\nNow we can scan through and different colors will stand out. Do you notice any strange values?\n\nIt is nice to be able to do these scans in spreadsheets, but we also can do these checks in a programming language like R, or in OpenRefine or SQL."
  },
  {
    "objectID": "EcologyLesson/qualitycontrol/index.html#key-points",
    "href": "EcologyLesson/qualitycontrol/index.html#key-points",
    "title": "Quality control",
    "section": "Key Points",
    "text": "Key Points\n\nAlways copy your original spreadsheet file and work with a copy so you don’t affect the raw data.\nUse data validation to prevent accidentally entering invalid data.\nUse sorting to check for invalid data.\nUse conditional formatting (cautiously) to check for invalid data.\n\nLicensed under CC-BY 4.0 2018–2022 by The Carpentries\nLicensed under CC-BY 4.0 2016–2018 by Data Carpentry"
  },
  {
    "objectID": "activities.html",
    "href": "activities.html",
    "title": "STEMcoding Activities",
    "section": "",
    "text": "View a flowchart of all STEMcoding activities here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccelerate the Blob\n\n\n\nMiddle School\n\n\nIntro HS\n\n\nPhysical Science\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAir Pressure Versus Height\n\n\n\nIntro HS\n\n\nMath\n\n\nPhysical Science\n\n\nPhysics\n\n\nAtmospheric Science\n\n\nData Science\n\n\nSpreadsheets\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApollo Moon Landing\n\n\n\nIntro HS\n\n\nPhysical Science\n\n\nPhysics\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBellicose Birds\n\n\n\nAdvanced HS\n\n\nPhysics\n\n\nJavascript\n\n\nTrigonometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBird Launcher\n\n\n\nIntro HS\n\n\nPhysical Science\n\n\nPhysics\n\n\nAlgebra\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBonk.io Clone\n\n\n\nIntro HS\n\n\nPhysical Science\n\n\nPhysics\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCO2 Survey\n\n\n\nIntro HS\n\n\nData Science\n\n\nSpreadsheets\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConductor Interactive\n\n\n\nAll Ages\n\n\nPhysics\n\n\nPhysical Science\n\n\nElectromagnetism\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEarth Day\n\n\n\nAdvanced HS\n\n\nTrigonometry\n\n\nEnvironmental Science\n\n\nData Science\n\n\nSpreadsheets\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nElectromagnetism: Unit System\n\n\n\nPhysics\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEscape Velocity and Newtonian Black Holes\n\n\n\nAdvanced HS\n\n\nAstronomy\n\n\nPhysics\n\n\nJavascript\n\n\nTrigonometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExoplanets\n\n\n\nAdvanced HS\n\n\nAstronomy\n\n\nPhysics\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFluid Mechanics Interactive\n\n\n\nAll Ages\n\n\nPhysics\n\n\nPhysical Science\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFractal Puzzle\n\n\n\nAll Ages\n\n\nMath\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGood Figures vs. Bad Figures\n\n\n\nAll Ages\n\n\nData Science\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLaser Defense Part 1\n\n\n\nJavaScript\n\n\nMath\n\n\nAdvanced HS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLaser Defense Part 2\n\n\n\nAdvanced HS\n\n\nMath\n\n\nJavaScript\n\n\nTrigonometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLunar Descent\n\n\n\nAdvanced HS\n\n\nPhysics\n\n\nJavascript\n\n\nTrigonometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMagnetic Force\n\n\n\nAdvanced HS\n\n\nPhysics\n\n\nElectromagnetism\n\n\nJavaScript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMathematical Flower Activity\n\n\n\nAdvanced HS\n\n\nMath\n\n\nJavaScript\n\n\nTrigonometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMove the Blob\n\n\n\nMiddle School\n\n\nIntro HS\n\n\nPhysical Science\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNight Sky Simulator\n\n\n\nAdvanced HS\n\n\nAstronomy\n\n\nSpreadsheets\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObject Tracker\n\n\n\nIntro HS\n\n\nAdvanced HS\n\n\nMath\n\n\nPhysics\n\n\nPhysical Science\n\n\nSpreadsheets\n\n\nJavaScript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOrbital Motion: Eccentricity\n\n\n\nAdvanced HS\n\n\nAstronomy\n\n\nPhysics\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOrbital Motion: Kepler’s Second Law\n\n\n\nAdvanced HS\n\n\nIntro HS\n\n\nPhysics\n\n\nAstronomy\n\n\nTrigonometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParticle Accelerator\n\n\n\nMiddle School\n\n\nIntro HS\n\n\nPhysical Science\n\n\nPhysics\n\n\nElectromagnetism\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParticle Accelerator with Potential\n\n\n\nMiddle School\n\n\nIntro HS\n\n\nPhysical Science\n\n\nPhysics\n\n\nElectromagnetism\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPi Day Part 1\n\n\n\nJavaScript\n\n\nMath\n\n\nGeometry\n\n\nMiddle School\n\n\nIntro HS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPi Day Part 2\n\n\n\nAdvanced HS\n\n\nTrigonometry\n\n\nPrecalculus\n\n\nJavaScript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPi Day in Parallel\n\n\n\nAdvanced HS\n\n\nMath\n\n\nGeometry\n\n\nComputer Science\n\n\nJavaScript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPipe Interactive\n\n\n\nAll Ages\n\n\nPhysics\n\n\nPhysical Science\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlanetoids\n\n\n\nAdvanced HS\n\n\nPhysics\n\n\nJavascript\n\n\nTrigonometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlanetoids with Momentum\n\n\n\nMiddle School\n\n\nIntro HS\n\n\nPhysical Science\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlanetoids with Torque\n\n\n\nAdvanced HS\n\n\nPhysics\n\n\nJavascript\n\n\nTrigonometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlanetoids with a Spring\n\n\n\nAdvanced HS\n\n\nIntro HS\n\n\nPhysical Science\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPong\n\n\n\nMiddle School\n\n\nIntro HS\n\n\nPhysical Science\n\n\nPhysics\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProject Mercury\n\n\n\nMiddle School\n\n\nIntro HS\n\n\nAdvanced HS\n\n\nIntro HS\n\n\nPhysical Science\n\n\nPhysics\n\n\nAstronomy\n\n\nSpace\n\n\nPrecalculus\n\n\nTrigonometry\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRC Circuits\n\n\n\nJavaScript\n\n\nAdvanced HS\n\n\nPhysics\n\n\nElectromagnetism\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRepulsion Between Two Charges\n\n\n\nIntro HS\n\n\nAdvanced HS\n\n\nPhysics\n\n\nElectromagnetism\n\n\nJavascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSlingshot With Gravity\n\n\n\nAdvanced HS\n\n\nAstronomy\n\n\nPhysics\n\n\nJavascript\n\n\nTrigonometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolar Cell Data Analysis\n\n\n\nIntro HS\n\n\nData Science\n\n\nSpreadsheets\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolar System Model\n\n\n\nIntro HS\n\n\nData Science\n\n\nSpreadsheets\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWave Interference\n\n\n\nAdvanced HS\n\n\nPhysics\n\n\nElectromagnetism\n\n\nJavaScript\n\n\nTrigonometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "standards.html",
    "href": "standards.html",
    "title": "Standards",
    "section": "",
    "text": "Under Construction!"
  },
  {
    "objectID": "teachertraining.html",
    "href": "teachertraining.html",
    "title": "Teacher Training",
    "section": "",
    "text": "Schedule"
  },
  {
    "objectID": "teachertraining.html#weteach_cs-summer-2025-texas-teacher-training",
    "href": "teachertraining.html#weteach_cs-summer-2025-texas-teacher-training",
    "title": "Teacher Training",
    "section": "",
    "text": "Schedule"
  },
  {
    "objectID": "EcologyLesson/setuppage/index.html",
    "href": "EcologyLesson/setuppage/index.html",
    "title": "Setup",
    "section": "",
    "text": "Download this data file to your computer: https://ndownloader.figshare.com/files/2252083"
  },
  {
    "objectID": "EcologyLesson/setuppage/index.html#data",
    "href": "EcologyLesson/setuppage/index.html#data",
    "title": "Setup",
    "section": "",
    "text": "Download this data file to your computer: https://ndownloader.figshare.com/files/2252083"
  },
  {
    "objectID": "EcologyLesson/setuppage/index.html#about-the-data",
    "href": "EcologyLesson/setuppage/index.html#about-the-data",
    "title": "Setup",
    "section": "About the data",
    "text": "About the data\nThe data for this lesson is a part of the Data Carpentry Ecology workshop. It is a teaching version of the Portal Database. The data in this lesson is a subset of the teaching version that has been intentionally ‘messed up’ for this lesson.\nThe data for this lesson and the workshop are in the Portal Project Teaching Database available on FigShare, with a CC-BY license available for reuse.\nErnest, M., Brown, J., Valone, T., and White, E.P. (2017). Portal Project Teaching Database. Version 6. Figshare. DOI: 10.6084/m9.figshare.1314459.v6"
  },
  {
    "objectID": "EcologyLesson/setuppage/index.html#software",
    "href": "EcologyLesson/setuppage/index.html#software",
    "title": "Setup",
    "section": "Software",
    "text": "Software\nTo interact with spreadsheets, we can use LibreOffice, Microsoft Excel, Gnumeric, OpenOffice.org, or other programs. Commands may differ a bit between programs, but the general ideas for thinking about spreadsheets are the same.\nFor this lesson, if you don’t have a spreadsheet program already, you can use LibreOffice. It’s a free, open source spreadsheet program.\n\nWindows\n\nDownload the Installer\n\nInstall LibreOffice by going to the installation page. The version for Windows should automatically be selected. Click Download Version X.X.X (whichever is the most recent version). You will go to a page that asks about a donation, but you don’t need to make one. Your download should begin automatically.\n\nInstall LibreOffice\nOnce the installer is downloaded, double click on it and LibreOffice should install.\n\n\n\nMac OS X\n\nDownload the Installer\n\nInstall LibreOffice by going to the installation page. The version for Mac should automatically be selected. Click Download Version X.X.X (whichever is the most recent version). You will go to a page that asks about a donation, but you don’t need to make one. Your download should begin automatically.\n\nInstall LibreOffice\nOnce the installer is downloaded, double click on it and LibreOffice should install\n\n\n\nLinux\n\nDownload the Installer\n\nInstall LibreOffice by going to the installation page. The version for Linux should automatically be selected. Click Download Version X.X.X (whichever is the most recent version). You will go to a page that asks about a donation, but you don’t need to make one. Your download should begin automatically.\n\nInstall LibreOffice\nOnce the installer is downloaded, double click on it and LibreOffice should install.\n\nLicensed under CC-BY 4.0 2018–2022 by The Carpentries\nLicensed under CC-BY 4.0 2016–2018 by Data Carpentry"
  },
  {
    "objectID": "EcologyLesson/landing/index.html",
    "href": "EcologyLesson/landing/index.html",
    "title": "Data Organization in Spreadsheets for Ecologists",
    "section": "",
    "text": "Good data organization is the foundation of any research project. Most researchers have data in spreadsheets, so it’s the place that many research projects start.\nWe organize data in spreadsheets in the ways that we as humans want to work with the data, but computers require that data be organized in particular ways. In order to use tools that make computation more efficient, such as programming languages like R or Python, we need to structure our data the way that computers need the data. Since this is where most research projects start, this is where we want to start too!\nIn this lesson, you will learn:\nIn this lesson, however, you will not learn about data analysis with spreadsheets. Much of your time as a researcher will be spent in the initial ‘data wrangling’ stage, where you need to organize the data to perform a proper analysis later. It’s not the most fun, but it is necessary. In this lesson you will learn how to think about data organization and some practices for more effective data wrangling. With this approach you can better format current data and plan new data collection so less data wrangling is needed."
  },
  {
    "objectID": "EcologyLesson/landing/index.html#getting-started",
    "href": "EcologyLesson/landing/index.html#getting-started",
    "title": "Data Organization in Spreadsheets for Ecologists",
    "section": "Getting Started",
    "text": "Getting Started\nData Carpentry’s teaching is hands-on, so participants are encouraged to use their own computers to insure the proper setup of tools for an efficient workflow. These lessons assume no prior knowledge of the skills or tools.\nTo get started, follow the directions in the “[Setup](../setuppage/index.qmd]” tab to download data to your computer and follow any installation instructions.\n\nPrerequisites\nThis lesson requires a working copy of spreadsheet software, such as Microsoft Excel or LibreOffice or OpenOffice.org (see more details in “Setup”). To most effectively use these materials, please make sure to install everything before working through this lesson"
  },
  {
    "objectID": "EcologyLesson/landing/index.html#for-instructors",
    "href": "EcologyLesson/landing/index.html#for-instructors",
    "title": "Data Organization in Spreadsheets for Ecologists",
    "section": "For Instructors",
    "text": "For Instructors\nIf you are teaching this lesson in a workshop, please see the Instructor notes."
  },
  {
    "objectID": "EcologyLesson/landing/index.html#schedule",
    "href": "EcologyLesson/landing/index.html#schedule",
    "title": "Data Organization in Spreadsheets for Ecologists",
    "section": "Schedule",
    "text": "Schedule\n | Setup | Download files required for the lesson |\n00:00 | 1. Introduction | What are basic principles for using spreadsheets for good data organization? |\n00:18 | 2. Formatting data tables in spreadsheets | How do we format data in spreadsheets for effective data use? |\n00:53 | 3. Formatting problems | What are some common challenges with formatting data in spreadsheets and how can we avoid them? |\n01:13 | 4. Dates as data | What are good approaches for handling dates in spreadsheets? |\n01:26 | 5. Quality Control | How can we carry out basic quality control and quality assurance in spreadsheets? |\n01:46 | 6. Exporting Data | How can we export data from spreadsheets in a way that is useful for downstream applications? |\n01:56 | Finish | |\nThe actual schedule may vary slightly depending on the topics and exercises chosen by the instructor.\nLicensed under CC-BY 4.0 2018–2022 by The Carpentries\nLicensed under CC-BY 4.0 2016–2018 by Data Carpentry"
  },
  {
    "objectID": "EcologyLesson/Intro/index.html",
    "href": "EcologyLesson/Intro/index.html",
    "title": "Introduction",
    "section": "",
    "text": "Teaching: 15 min\nExercises: 3 min\nQuestions\n\nWhat are basic principles for using spreadsheets for good data organization?\n\nObjectives\n\nDescribe best practices for organizing data so computers can make the best use of data sets.\n\n\nGood data organization is the foundation of your research project. Most researchers have data or do data entry in spreadsheets. Spreadsheet programs are very useful graphical interfaces for designing data tables and handling very basic data quality control functions."
  },
  {
    "objectID": "EcologyLesson/Intro/index.html#overview",
    "href": "EcologyLesson/Intro/index.html#overview",
    "title": "Introduction",
    "section": "",
    "text": "Teaching: 15 min\nExercises: 3 min\nQuestions\n\nWhat are basic principles for using spreadsheets for good data organization?\n\nObjectives\n\nDescribe best practices for organizing data so computers can make the best use of data sets.\n\n\nGood data organization is the foundation of your research project. Most researchers have data or do data entry in spreadsheets. Spreadsheet programs are very useful graphical interfaces for designing data tables and handling very basic data quality control functions."
  },
  {
    "objectID": "EcologyLesson/Intro/index.html#spreadsheet-outline",
    "href": "EcologyLesson/Intro/index.html#spreadsheet-outline",
    "title": "Introduction",
    "section": "Spreadsheet outline",
    "text": "Spreadsheet outline\nAfter this lesson, you will be able to:\nbImplement best practices in data table formatting  Identify and address common formatting mistakes * Understand approaches for handling dates in spreadsheets * Utilize basic quality control features and data manipulation practices * Effectively export data from spreadsheet programs Overall good data practices\nSpreadsheets are good for data entry. Therefore we have a lot of data in spreadsheets. Much of your time as a researcher will be spent in this ‘data wrangling’ stage. It’s not the most fun, but it’s necessary. We’ll teach you how to think about data organization and some practices for more effective data wrangling."
  },
  {
    "objectID": "EcologyLesson/Intro/index.html#what-this-lesson-will-not-teach-you",
    "href": "EcologyLesson/Intro/index.html#what-this-lesson-will-not-teach-you",
    "title": "Introduction",
    "section": "What this lesson will not teach you",
    "text": "What this lesson will not teach you\n\nHow to do statistics in a spreadsheet\nHow to do plotting in a spreadsheet\nHow to write code in spreadsheet programs\n\nIf you’re looking to do this, a good reference is Head First Excel, published by O’Reilly."
  },
  {
    "objectID": "EcologyLesson/Intro/index.html#why-arent-we-teaching-data-analysis-in-spreadsheets",
    "href": "EcologyLesson/Intro/index.html#why-arent-we-teaching-data-analysis-in-spreadsheets",
    "title": "Introduction",
    "section": "Why aren’t we teaching data analysis in spreadsheets",
    "text": "Why aren’t we teaching data analysis in spreadsheets\n\nData analysis in spreadsheets usually requires a lot of manual work. If you want to change a parameter or run an analysis with a new data set, you usually have to redo everything by hand. (We do know that you can create macros, but see the next point.)\nIt is also difficult to track or reproduce statistical or plotting analyses done in spreadsheet programs when you want to go back to your work or someone asks for details of your analysis."
  },
  {
    "objectID": "EcologyLesson/Intro/index.html#spreadsheet-programs",
    "href": "EcologyLesson/Intro/index.html#spreadsheet-programs",
    "title": "Introduction",
    "section": "Spreadsheet programs",
    "text": "Spreadsheet programs\nMany spreadsheet programs are available. Since most participants utilize Excel as their primary spreadsheet program, this lesson will make use of Excel examples.\nFree spreadsheet programs that can also be used are LibreOffice Calc, and even Google Sheets.\nCommands may differ a bit between programs, but the general idea is the same.\nSpreadsheets encompass a lot of the things we need to be able to do as researchers. We can use them for:\n\nData entry\nOrganizing data\nSubsetting and sorting data\nStatistics\nPlotting\n\nWe do a lot of different operations in spreadsheets. What kind of operations do you do in spreadsheets? Which ones do you think spreadsheets are good for?"
  },
  {
    "objectID": "EcologyLesson/Intro/index.html#problems-with-spreadsheets",
    "href": "EcologyLesson/Intro/index.html#problems-with-spreadsheets",
    "title": "Introduction",
    "section": "Problems with Spreadsheets",
    "text": "Problems with Spreadsheets\nSpreadsheets are good for data entry, but in reality we tend to use spreadsheet programs for much more than data entry. We use them to create data tables for publications, to generate summary statistics, and make figures.\nGenerating tables for publications in a spreadsheet is not optimal - often, when formatting a data table for publication, we’re reporting key summary statistics in a way that is not really meant to be read as data, and often involves special formatting (merging cells, creating borders, making it pretty). Cutting and pasting from a spreadsheet to a document software (like Word) can have unpredictable results. We advise you to create tables within these document software using the document’s own table editing software.\nThe latter two applications, generating statistics and figures, should be used with caution: because of the graphical, drag and drop nature of spreadsheet programs, it can be very difficult, if not impossible, to replicate your steps (much less retrace anyone else’s), particularly if your stats or figures require you to do more complex calculations. Furthermore, in doing calculations in a spreadsheet, it’s easy to accidentally apply a slightly different formula to multiple adjacent cells. When using a command-line based statistics program like R or SAS, it’s practically impossible to apply a calculation to one observation in your data set but not another unless you’re doing it on purpose."
  },
  {
    "objectID": "EcologyLesson/Intro/index.html#using-spreadsheets-for-data-entry-and-cleaning",
    "href": "EcologyLesson/Intro/index.html#using-spreadsheets-for-data-entry-and-cleaning",
    "title": "Introduction",
    "section": "Using Spreadsheets for Data Entry and Cleaning",
    "text": "Using Spreadsheets for Data Entry and Cleaning\nHowever, there are circumstances where you might want to use a spreadsheet program to produce “quick and dirty” calculations or figures, and data cleaning will help you use some of these features. Data cleaning also puts your data in a better format prior to importation into a statistical analysis program. We will show you how to use some features of spreadsheet programs to check your data quality along the way and produce preliminary summary statistics.\nIn this lesson, we will assume that you are most likely using Excel as your primary spreadsheet program - there are others (gnumeric, Calc from OpenOffice), and their functionality is similar, but Excel seems to be the program most used by biologists and ecologists.\nIn this lesson we’re going to talk about:\n\nFormatting data tables in spreadsheets\nFormatting problems\nDates as data\nQuality control\nExporting data"
  },
  {
    "objectID": "EcologyLesson/Intro/index.html#key-points",
    "href": "EcologyLesson/Intro/index.html#key-points",
    "title": "Introduction",
    "section": "Key Points",
    "text": "Key Points\n\nGood data organization is the foundation of any research project.\n\nLicensed under CC-BY 4.0 2018–2022 by The Carpentries\nLicensed under CC-BY 4.0 2016–2018 by Data Carpentry"
  },
  {
    "objectID": "EcologyLesson/exporting/index.html",
    "href": "EcologyLesson/exporting/index.html",
    "title": "Exporting data",
    "section": "",
    "text": "Teaching: 10 min\nExercises: 0 min\nQuestions\n\nHow can we export data from spreadsheets in a way that is useful for downstream applications?\n\nObjectives\n\nStore spreadsheet data in universal file formats.\nExport data from a spreadsheet to a CSV file.\n\n\nStoring the data you’re going to work with for your analyses in Excel default file format (*.xls or *.xlsx - depending on the Excel version) isn’t a good idea. Why?\n\nBecause it is a proprietary format, and it is possible that in the future, technology won’t exist (or will become sufficiently rare) to make it inconvenient, if not impossible, to open the file.\nOther spreadsheet software may not be able to open files saved in a proprietary Excel format.\nDifferent versions of Excel may handle data differently, leading to inconsistencies.\nThe above points also apply to other formats such as open data formats used by LibreOffice / Open Office. These formats are not static and do not get parsed the same way by different software packages.\n\nAs an example of inconsistencies in data storage, do you remember how we talked about how Excel stores dates earlier? It turns out that there are multiple defaults for different versions of the software, and you can switch between them all. So, say you’re compiling Excel-stored data from multiple sources. There are dates in each file - Excel interprets them as their own internally consistent serial numbers. When you combine the data, Excel will take the serial number from the place you’re importing it from, and interpret it using the rule set for the version of Excel you’re using. Essentially, you could be adding errors to your data, and it wouldn’t necessarily be flagged by any data cleaning methods if your ranges overlap.\nStoring data in a universal, open, and static format will help deal with this problem. Try tab-delimited (tab separated values or TSV) or comma-delimited (comma separated values or CSV). CSV files are plain text files where the columns are separated by commas, hence ‘comma separated values’ or CSV. The advantage of a CSV file over an Excel/SPSS/etc. file is that we can open and read a CSV file using just about any software, including plain text editors like TextEdit or NotePad. Data in a CSV file can also be easily imported into other formats and environments, such as SQLite and R. We’re not tied to a certain version of a certain expensive program when we work with CSV files, so it’s a good format to work with for maximum portability and endurance. Most spreadsheet programs can save to delimited text formats like CSV easily, although they may give you a warning during the file export.\nTo save a file you have opened in Excel in CSV format:\n\nFrom the top menu select ‘File’ and ‘Save as’.\nIn the ‘Format’ field, from the list, select ‘Comma Separated Values’ (*.csv).\nDouble check the file name and the location where you want to save it and hit ‘Save’.\n\nAn important note for backwards compatibility: you can open CSV files in Excel!"
  },
  {
    "objectID": "EcologyLesson/exporting/index.html#overview",
    "href": "EcologyLesson/exporting/index.html#overview",
    "title": "Exporting data",
    "section": "",
    "text": "Teaching: 10 min\nExercises: 0 min\nQuestions\n\nHow can we export data from spreadsheets in a way that is useful for downstream applications?\n\nObjectives\n\nStore spreadsheet data in universal file formats.\nExport data from a spreadsheet to a CSV file.\n\n\nStoring the data you’re going to work with for your analyses in Excel default file format (*.xls or *.xlsx - depending on the Excel version) isn’t a good idea. Why?\n\nBecause it is a proprietary format, and it is possible that in the future, technology won’t exist (or will become sufficiently rare) to make it inconvenient, if not impossible, to open the file.\nOther spreadsheet software may not be able to open files saved in a proprietary Excel format.\nDifferent versions of Excel may handle data differently, leading to inconsistencies.\nThe above points also apply to other formats such as open data formats used by LibreOffice / Open Office. These formats are not static and do not get parsed the same way by different software packages.\n\nAs an example of inconsistencies in data storage, do you remember how we talked about how Excel stores dates earlier? It turns out that there are multiple defaults for different versions of the software, and you can switch between them all. So, say you’re compiling Excel-stored data from multiple sources. There are dates in each file - Excel interprets them as their own internally consistent serial numbers. When you combine the data, Excel will take the serial number from the place you’re importing it from, and interpret it using the rule set for the version of Excel you’re using. Essentially, you could be adding errors to your data, and it wouldn’t necessarily be flagged by any data cleaning methods if your ranges overlap.\nStoring data in a universal, open, and static format will help deal with this problem. Try tab-delimited (tab separated values or TSV) or comma-delimited (comma separated values or CSV). CSV files are plain text files where the columns are separated by commas, hence ‘comma separated values’ or CSV. The advantage of a CSV file over an Excel/SPSS/etc. file is that we can open and read a CSV file using just about any software, including plain text editors like TextEdit or NotePad. Data in a CSV file can also be easily imported into other formats and environments, such as SQLite and R. We’re not tied to a certain version of a certain expensive program when we work with CSV files, so it’s a good format to work with for maximum portability and endurance. Most spreadsheet programs can save to delimited text formats like CSV easily, although they may give you a warning during the file export.\nTo save a file you have opened in Excel in CSV format:\n\nFrom the top menu select ‘File’ and ‘Save as’.\nIn the ‘Format’ field, from the list, select ‘Comma Separated Values’ (*.csv).\nDouble check the file name and the location where you want to save it and hit ‘Save’.\n\nAn important note for backwards compatibility: you can open CSV files in Excel!"
  },
  {
    "objectID": "EcologyLesson/exporting/index.html#a-note-on-cross-platform-operability",
    "href": "EcologyLesson/exporting/index.html#a-note-on-cross-platform-operability",
    "title": "Exporting data",
    "section": "A Note on Cross-platform Operability",
    "text": "A Note on Cross-platform Operability\nBy default, most coding and statistical environments expect UNIX-style line endings (ASCII LF character) as representing line breaks. However, Windows uses an alternate line ending signifier (ASCII CR LF characters) by default for legacy compatibility with Teletype-based systems.\nAs such, when exporting to CSV using Excel, your data in text format will look like this:\ndata1,data21,24,5\nWhen opening your CSV file in Excel again, it will parse it as follows:\n\nHowever, if you open your CSV file on a different system that does not parse the CR character it will interpret your CSV file differently:\nYour data in text format then look like this:\ndata1\ndata2\n1\n2\n...\nYou will then see a weird character or possibly the string CR or \\r:\n\nthus causing terrible things to happen to your data. For example, 2\\r is not a valid integer, and thus will throw an error (if you’re lucky) when you attempt to operate on it in R or Python. Note that this happens on Excel for OSX as well as Windows, due to legacy Windows compatibility.\nThere are a handful of solutions for enforcing uniform UNIX-style line endings on your exported CSV files:\nWhen exporting from Excel, save as a “Windows comma separated (.csv)” file\n\nA note on R and .xlsx\nThere are R packages that can read .xls or .xlsx files (as well as Google spreadsheets). It is even possible to access different worksheets in the .xlsx documents.\nBut\n\nsome of these only work on Windows\nthis equates to replacing a (simple but manual) export to csv with additional complexity/dependencies in the data analysis R code\ndata formatting best practice still apply\nIs there really a good reason why csv (or similar) is not adequate?\n\n\n\nCaveats on commas\nIn some datasets, the data values themselves may include commas (,). This is particularly true in countries that use commas as decimal separators. In that case, the software which you use (including Excel) will most likely incorrectly display the data in columns. This is because the commas which are a part of the data values will be interpreted as delimiters.\nIf you are working with data that contains commas, you likely will need to use another delimiter when working in a spreadsheet. In this case, consider using tabs as your delimiter and working with TSV files. TSV files can be exported from spreadsheet programs in the same way as CSV files. For more of a discussion on data formats and potential issues with commas within datasets see the discussion page."
  },
  {
    "objectID": "EcologyLesson/exporting/index.html#key-points",
    "href": "EcologyLesson/exporting/index.html#key-points",
    "title": "Exporting data",
    "section": "Key Points",
    "text": "Key Points\n\nData stored in common spreadsheet formats will often not be read correctly into data analysis software, introducing errors into your data.\nExporting data from spreadsheets to formats like CSV or TSV puts it in a format that can be used consistently by most programs."
  },
  {
    "objectID": "projects/particleacclerator.html",
    "href": "projects/particleacclerator.html",
    "title": "Particle Accelerator",
    "section": "",
    "text": "In this exercise we will make a simulation of a particle being accelerated between two plates."
  },
  {
    "objectID": "projects/particleacclerator.html#links-to-activity",
    "href": "projects/particleacclerator.html#links-to-activity",
    "title": "Particle Accelerator",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Particle Accelerator\nParticle Accelerator Code Editor"
  },
  {
    "objectID": "projects/particleacclerator.html#particle-accelerator-playlist",
    "href": "projects/particleacclerator.html#particle-accelerator-playlist",
    "title": "Particle Accelerator",
    "section": "Particle Accelerator Playlist",
    "text": "Particle Accelerator Playlist"
  },
  {
    "objectID": "projects/magneticforce.html",
    "href": "projects/magneticforce.html",
    "title": "Magnetic Force",
    "section": "",
    "text": "You may recall the last programming exercise that involved a particle being accelerated through two charged plates. In this exercise we will add a magnetic field to the right hand side of the simulation. The particle only experiences this field when it passes into the right-hand side. This example is loosely based on the idea of a “mass spectrometer”. It turns out that if you vaporize a little bit of a sample with some unknown molecules there tends to be alot of molecules that lose ONE electron. Since the molecule has lost an electron it has a +1 charge. The mass of the molecule is essentially the same even if it is missing an electron because electrons make up a very, very small fraction of the mass of atoms. As you will learn about in this lab, the trajectory of the particle in the magnetic field tells us something about the mass of the particle (if you already know q, v, and B for example)."
  },
  {
    "objectID": "projects/magneticforce.html#links-to-activity",
    "href": "projects/magneticforce.html#links-to-activity",
    "title": "Magnetic Force",
    "section": "Links to Activity",
    "text": "Links to Activity\nInstructions for Magnetic Force Magnetic Force Code Editor"
  },
  {
    "objectID": "projects/magneticforce.html#magnetic-force-playlist",
    "href": "projects/magneticforce.html#magnetic-force-playlist",
    "title": "Magnetic Force",
    "section": "Magnetic Force Playlist",
    "text": "Magnetic Force Playlist"
  },
  {
    "objectID": "projects/fractal.html",
    "href": "projects/fractal.html",
    "title": "Fractal Puzzle",
    "section": "",
    "text": "Student Worksheets/Print Outs"
  },
  {
    "objectID": "projects/fractal.html#links-to-activity",
    "href": "projects/fractal.html#links-to-activity",
    "title": "Fractal Puzzle",
    "section": "",
    "text": "Student Worksheets/Print Outs"
  },
  {
    "objectID": "projects/black.html",
    "href": "projects/black.html",
    "title": "Escape Velocity and Newtonian Black Holes",
    "section": "",
    "text": "That activity explores the behavior of objects like planets or comets interacting with a massive object like the sun."
  },
  {
    "objectID": "projects/black.html#links-to-activity",
    "href": "projects/black.html#links-to-activity",
    "title": "Escape Velocity and Newtonian Black Holes",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Escape Velocity and Newtonain Black Holes\nCode Editor for Escape Velocity and Newtonian Black Holes"
  },
  {
    "objectID": "projects/black.html#escape-velocity-and-black-holes-playlist",
    "href": "projects/black.html#escape-velocity-and-black-holes-playlist",
    "title": "Escape Velocity and Newtonian Black Holes",
    "section": "Escape Velocity and Black Holes Playlist",
    "text": "Escape Velocity and Black Holes Playlist"
  },
  {
    "objectID": "projects/particleacceleratorpotential.html",
    "href": "projects/particleacceleratorpotential.html",
    "title": "Particle Accelerator with Potential",
    "section": "",
    "text": "This programming lab is a continuation of the accelerator programming lab where a proton is accelerated from the electric field between two charged plates. The only difference between the earlier programming lab and this programming labis that we are going to think about the potential difference between the two charged plates."
  },
  {
    "objectID": "projects/particleacceleratorpotential.html#links-to-activity",
    "href": "projects/particleacceleratorpotential.html#links-to-activity",
    "title": "Particle Accelerator with Potential",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Particle Accelerator with Potential\nParticle Accelerator with Potential Code Editor"
  },
  {
    "objectID": "projects/planetoidsspring.html",
    "href": "projects/planetoidsspring.html",
    "title": "Planetoids with a Spring",
    "section": "",
    "text": "Think back to the momentum exercise. The little ship can collide with a “blob” and stick to it. Now imagine that this blob is attached to a spring. Wouldn’t it be interesting if the ship could collide with the blob and then the spring would push and pull both around? This is what we will do in this exercise."
  },
  {
    "objectID": "projects/planetoidsspring.html#links-to-activity",
    "href": "projects/planetoidsspring.html#links-to-activity",
    "title": "Planetoids with a Spring",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Planetoids with a Spring\nPlanetoids with a Spring Code Editor"
  },
  {
    "objectID": "projects/planetoidsspring.html#planetoids-with-a-spring-playlist",
    "href": "projects/planetoidsspring.html#planetoids-with-a-spring-playlist",
    "title": "Planetoids with a Spring",
    "section": "Planetoids with a Spring Playlist",
    "text": "Planetoids with a Spring Playlist"
  },
  {
    "objectID": "projects/objecttracker.html",
    "href": "projects/objecttracker.html",
    "title": "Object Tracker",
    "section": "",
    "text": "Now you can record your own direct measurement videos and analyze them with p5.js.\nNote: The STEMcoding Object Tracker works best in chrome and edge!\nIt can work in other browsers (safari, firefox, etc.) but it may run slower or not at all due to some memory problems."
  },
  {
    "objectID": "projects/objecttracker.html#links-to-activity",
    "href": "projects/objecttracker.html#links-to-activity",
    "title": "Object Tracker",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nPart 1: Track the Object\n\nInstructions for Part 1\nPart 1 Code Editor\n\n\n\nPart 2: Analyze Height vs. Time\n\nInstructions for Part 2\n\n\n\nPart 2: Analyze Velocity vs. Time\n\nInstructions for Part 3"
  },
  {
    "objectID": "projects/objecttracker.html#object-tracker-playlist",
    "href": "projects/objecttracker.html#object-tracker-playlist",
    "title": "Object Tracker",
    "section": "Object Tracker Playlist",
    "text": "Object Tracker Playlist"
  },
  {
    "objectID": "projects/pong.html",
    "href": "projects/pong.html",
    "title": "Pong",
    "section": "",
    "text": "In the classic game of Pong, there is a little ball that bounces around off various walls and objects. Importantly, the ball changes direction when it bounces but it never really slows down in speed. This is a big hint that the collisions that the ball is experiencing are elastic collisions."
  },
  {
    "objectID": "projects/pong.html#links-to-activity",
    "href": "projects/pong.html#links-to-activity",
    "title": "Pong",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Pong\nCode Editor for Pong"
  },
  {
    "objectID": "projects/pong.html#pong-and-bonk.io-playlist",
    "href": "projects/pong.html#pong-and-bonk.io-playlist",
    "title": "Pong",
    "section": "Pong and Bonk.io Playlist",
    "text": "Pong and Bonk.io Playlist"
  },
  {
    "objectID": "projects/pipe.html#pipe-interactive-video",
    "href": "projects/pipe.html#pipe-interactive-video",
    "title": "Pipe Interactive",
    "section": "Pipe Interactive Video",
    "text": "Pipe Interactive Video"
  },
  {
    "objectID": "projects/lunar.html",
    "href": "projects/lunar.html",
    "title": "Lunar Descent",
    "section": "",
    "text": "If you have finished tinkering with the Planetoids lab you can continue with this lab where we will now add gravity to the game! You have a little ship that you must fly around and land safely on the moon. If you approach the landing too fast you will crash the ship."
  },
  {
    "objectID": "projects/lunar.html#links-to-activity",
    "href": "projects/lunar.html#links-to-activity",
    "title": "Lunar Descent",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Lunar Descent\nCode Editor for Lunar Descent"
  },
  {
    "objectID": "projects/lunar.html#lunar-descent-playlist",
    "href": "projects/lunar.html#lunar-descent-playlist",
    "title": "Lunar Descent",
    "section": "Lunar Descent Playlist",
    "text": "Lunar Descent Playlist"
  },
  {
    "objectID": "projects/solarsystem.html#solar-system-model-playlist",
    "href": "projects/solarsystem.html#solar-system-model-playlist",
    "title": "Solar System Model",
    "section": "Solar System Model Playlist",
    "text": "Solar System Model Playlist"
  },
  {
    "objectID": "projects/slingshotgravity.html",
    "href": "projects/slingshotgravity.html",
    "title": "Slingshot With Gravity",
    "section": "",
    "text": "Instructions for Slingshot with Gravity\nSlingshot with Gravity Code Editor"
  },
  {
    "objectID": "projects/slingshotgravity.html#links-to-activity",
    "href": "projects/slingshotgravity.html#links-to-activity",
    "title": "Slingshot With Gravity",
    "section": "",
    "text": "Instructions for Slingshot with Gravity\nSlingshot with Gravity Code Editor"
  },
  {
    "objectID": "projects/slingshotgravity.html#slingshot-with-gravity-playlist",
    "href": "projects/slingshotgravity.html#slingshot-with-gravity-playlist",
    "title": "Slingshot With Gravity",
    "section": "Slingshot With Gravity Playlist",
    "text": "Slingshot With Gravity Playlist"
  },
  {
    "objectID": "projects/co2.html#co2-survey-playlist",
    "href": "projects/co2.html#co2-survey-playlist",
    "title": "CO2 Survey",
    "section": "CO2 Survey Playlist",
    "text": "CO2 Survey Playlist"
  },
  {
    "objectID": "projects/repulsion.html",
    "href": "projects/repulsion.html",
    "title": "Repulsion Between Two Charges",
    "section": "",
    "text": "Ever since scientists realized that the sun is powered by nuclear fusion reactions, people have been thinking about causing these reactions to occur in the laboratory in order to create a clean and abundant energy source. For at least five decades, this dream has been frustrated by a repulsive problem."
  },
  {
    "objectID": "projects/repulsion.html#links-to-activity",
    "href": "projects/repulsion.html#links-to-activity",
    "title": "Repulsion Between Two Charges",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Repulsion Between Two Charges\nRepulsion Between Two Charges Code Editor"
  },
  {
    "objectID": "projects/repulsion.html#repulsion-between-two-charges-playlist",
    "href": "projects/repulsion.html#repulsion-between-two-charges-playlist",
    "title": "Repulsion Between Two Charges",
    "section": "Repulsion Between Two Charges Playlist",
    "text": "Repulsion Between Two Charges Playlist"
  },
  {
    "objectID": "projects/piday1.html",
    "href": "projects/piday1.html",
    "title": "Pi Day Part 1",
    "section": "",
    "text": "You are trapped on a deserted island by a psychopath who is keeping you there until you can determine the digits of π out to many decimal places. All you have is the p5.js web editor! What to do!? (FYI: Try not to think about giving up and just enjoying the island.)"
  },
  {
    "objectID": "projects/piday1.html#links-to-activity",
    "href": "projects/piday1.html#links-to-activity",
    "title": "Pi Day Part 1",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Pi Day Part 1\nPi Day Part 1 Code Editor"
  },
  {
    "objectID": "projects/piday1.html#pi-day-part-1-playlist",
    "href": "projects/piday1.html#pi-day-part-1-playlist",
    "title": "Pi Day Part 1",
    "section": "Pi Day Part 1 Playlist",
    "text": "Pi Day Part 1 Playlist"
  },
  {
    "objectID": "projects/movetheblob.html",
    "href": "projects/movetheblob.html",
    "title": "Move the Blob",
    "section": "",
    "text": "On the internet there are some fun games where you control a circle-looking-thing that you can move around and interact (and potentially destroy or absorb!) other circle-looking things controlled by other people. Two games that come to mind are diep.io and agar.io. There are plenty of others like them out there"
  },
  {
    "objectID": "projects/movetheblob.html#links-to-activity",
    "href": "projects/movetheblob.html#links-to-activity",
    "title": "Move the Blob",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Move the Blob\nCode Editor for Move the Blob"
  },
  {
    "objectID": "projects/movetheblob.html#move-the-blob-video",
    "href": "projects/movetheblob.html#move-the-blob-video",
    "title": "Move the Blob",
    "section": "Move the Blob Video",
    "text": "Move the Blob Video\n\n&lt;p&gt;&lt;/iframe&lt;/p&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyLXRpdGxl\"&gt;STEMcoding&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXItdGl0bGU=\"&gt;STEMcoding&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6U1RFTWNvZGluZyBBY3Rpdml0aWVz\"&gt;STEMcoding Activities&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2FjdGl2aXRpZXMuaHRtbA==\"&gt;/activities.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6QWJvdXQ=\"&gt;About&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2Fib3V0Lmh0bWw=\"&gt;/about.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6UGVvcGxl\"&gt;People&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L3Blb3BsZS5odG1s\"&gt;/people.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6VGVhY2hlciBUcmFpbmluZw==\"&gt;Teacher Training&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L3RlYWNoZXJ0cmFpbmluZy5odG1s\"&gt;/teachertraining.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW5hdmJhci10b29sczpodHRwczovL3d3dy55b3V0dWJlLmNvbS9AU1RFTWNvZGluZw==\"&gt;https://www.youtube.com/@STEMcoding&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW5hdmJhci10b29sczpodHRwczovL2Rpc2NvcmQuZ2cvYnNXZ3FjcXdDRQ==\"&gt;https://discord.gg/bsWgqcqwCE&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW1ldGF0aXRsZQ==\"&gt;Move the Blob – STEMcoding&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkdGl0bGU=\"&gt;Move the Blob – STEMcoding&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZHRpdGxl\"&gt;Move the Blob – STEMcoding&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW1ldGFzaXRlbmFtZQ==\"&gt;STEMcoding&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkZGVzYw==\"&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZGRkZXNj\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const onCopySuccess = function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  }\n  const getTextToCopy = function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {\n    text: getTextToCopy\n  });\n  clipboard.on('success', onCopySuccess);\n  if (window.document.getElementById('quarto-embedded-source-code-modal')) {\n    const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {\n      text: getTextToCopy,\n      container: window.document.getElementById('quarto-embedded-source-code-modal')\n    });\n    clipboardModal.on('success', onCopySuccess);\n  }\n    var localhostRegex = new RegExp(/^(?:http|https):\\/\\/localhost\\:?[0-9]*\\//);\n    var mailtoRegex = new RegExp(/^mailto:/);\n      var filterRegex = new RegExp('/' + window.location.host + '/');\n    var isInternal = (href) =&gt; {\n        return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);\n    }\n    // Inspect non-navigation links and adorn them if external\n \tvar links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');\n    for (var i=0; i&lt;links.length; i++) {\n      const link = links[i];\n      if (!isInternal(link.href)) {\n        // undo the damage that might have been done by quarto-nav.js in the case of\n        // links that we want to consider external\n        if (link.dataset.originalHref !== undefined) {\n          link.href = link.dataset.originalHref;\n        }\n      }\n    }\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\n    const config = {\n      allowHTML: true,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start',\n    };\n    if (contentFn) {\n      config.content = contentFn;\n    }\n    if (onTriggerFn) {\n      config.onTrigger = onTriggerFn;\n    }\n    if (onUntriggerFn) {\n      config.onUntrigger = onUntriggerFn;\n    }\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      if (note) {\n        return note.innerHTML;\n      } else {\n        return \"\";\n      }\n    });\n  }\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\n  const processXRef = (id, note) =&gt; {\n    // Strip column container classes\n    const stripColumnClz = (el) =&gt; {\n      el.classList.remove(\"page-full\", \"page-columns\");\n      if (el.children) {\n        for (const child of el.children) {\n          stripColumnClz(child);\n        }\n      }\n    }\n    stripColumnClz(note)\n    if (id === null || id.startsWith('sec-')) {\n      // Special case sections, only their first couple elements\n      const container = document.createElement(\"div\");\n      if (note.children && note.children.length &gt; 2) {\n        container.appendChild(note.children[0].cloneNode(true));\n        for (let i = 1; i &lt; note.children.length; i++) {\n          const child = note.children[i];\n          if (child.tagName === \"P\" && child.innerText === \"\") {\n            continue;\n          } else {\n            container.appendChild(child.cloneNode(true));\n            break;\n          }\n        }\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(container);\n        }\n        return container.innerHTML\n      } else {\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(note);\n        }\n        return note.innerHTML;\n      }\n    } else {\n      // Remove any anchor links if they are present\n      const anchorLink = note.querySelector('a.anchorjs-link');\n      if (anchorLink) {\n        anchorLink.remove();\n      }\n      if (window.Quarto?.typesetMath) {\n        window.Quarto.typesetMath(note);\n      }\n      if (note.classList.contains(\"callout\")) {\n        return note.outerHTML;\n      } else {\n        return note.innerHTML;\n      }\n    }\n  }\n  for (var i=0; i&lt;xrefs.length; i++) {\n    const xref = xrefs[i];\n    tippyHover(xref, undefined, function(instance) {\n      instance.disable();\n      let url = xref.getAttribute('href');\n      let hash = undefined; \n      if (url.startsWith('#')) {\n        hash = url;\n      } else {\n        try { hash = new URL(url).hash; } catch {}\n      }\n      if (hash) {\n        const id = hash.replace(/^#\\/?/, \"\");\n        const note = window.document.getElementById(id);\n        if (note !== null) {\n          try {\n            const html = processXRef(id, note.cloneNode(true));\n            instance.setContent(html);\n          } finally {\n            instance.enable();\n            instance.show();\n          }\n        } else {\n          // See if we can fetch this\n          fetch(url.split('#')[0])\n          .then(res =&gt; res.text())\n          .then(html =&gt; {\n            const parser = new DOMParser();\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\n            const note = htmlDoc.getElementById(id);\n            if (note !== null) {\n              const html = processXRef(id, note);\n              instance.setContent(html);\n            } \n          }).finally(() =&gt; {\n            instance.enable();\n            instance.show();\n          });\n        }\n      } else {\n        // See if we can fetch a full url (with no hash to target)\n        // This is a special case and we should probably do some content thinning / targeting\n        fetch(url)\n        .then(res =&gt; res.text())\n        .then(html =&gt; {\n          const parser = new DOMParser();\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\n          const note = htmlDoc.querySelector('main.content');\n          if (note !== null) {\n            // This should only happen for chapter cross references\n            // (since there is no id in the URL)\n            // remove the first header\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\n              note.children[0].remove();\n            }\n            const html = processXRef(null, note);\n            instance.setContent(html);\n          } \n        }).finally(() =&gt; {\n          instance.enable();\n          instance.show();\n        });\n      }\n    }, function(instance) {\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            div.style.left = 0;\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n        // Handle positioning of the toggle\n    window.addEventListener(\n      \"resize\",\n      throttle(() =&gt; {\n        elRect = undefined;\n        if (selectedAnnoteEl) {\n          selectCodeLines(selectedAnnoteEl);\n        }\n      }, 10)\n    );\n    function throttle(fn, ms) {\n    let throttle = false;\n    let timer;\n      return (...args) =&gt; {\n        if(!throttle) { // first call gets through\n            fn.apply(this, args);\n            throttle = true;\n        } else { // all the others get throttled\n            if(timer) clearTimeout(timer); // cancel #2\n            timer = setTimeout(() =&gt; {\n              fn.apply(this, args);\n              timer = throttle = false;\n            }, ms);\n        }\n      };\n    }\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "projects/planetoids.html",
    "href": "projects/planetoids.html",
    "title": "Planetoids",
    "section": "",
    "text": "This lab will guide you through coding up a web-based implementation of the classic video game asteroids."
  },
  {
    "objectID": "projects/planetoids.html#links-to-activity",
    "href": "projects/planetoids.html#links-to-activity",
    "title": "Planetoids",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for Planetoids\nCode Editor for Planetoids"
  },
  {
    "objectID": "projects/planetoids.html#planetoids-playlist",
    "href": "projects/planetoids.html#planetoids-playlist",
    "title": "Planetoids",
    "section": "Planetoids Playlist",
    "text": "Planetoids Playlist"
  },
  {
    "objectID": "projects/projectmercury.html",
    "href": "projects/projectmercury.html",
    "title": "Project Mercury",
    "section": "",
    "text": "Mathematician Katherine Johnson is famous for calculating trajectories of America’s first manned space missions for Project Mercury as depicted in the movie Hidden Figures.\nThe big concern at that point in the history of the space program was accurately predicting where a spacecraft would land in the ocean after re-entering the earth’s atmosphere. Any miscalculation could send the mercury capsule hundreds of miles from where the Navy was expecting to recover the spacecraft and the astronaut inside.\nThe calculation that Katherine Johnson did had to consider many different effects on the trajectory of the mercury capsule. For this activity we are going to keep it simple and start with putting the capsule in a circular orbit. In the second part, we will consider how the mercury capsule comes back to earth. This part of the space mission is referred to as “re-entry”."
  },
  {
    "objectID": "projects/projectmercury.html#links-to-activity",
    "href": "projects/projectmercury.html#links-to-activity",
    "title": "Project Mercury",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nPart 1\n\nInstructions for Project Mercury (Part 1)\nProject Mercury (Part 1) Code Editor\n\n\n\nPart 2\n\nInstructions for Project Mercury (Part 2)\nProject Mercury (Part 2) Code Editor"
  },
  {
    "objectID": "projects/projectmercury.html#project-mercury-playlist",
    "href": "projects/projectmercury.html#project-mercury-playlist",
    "title": "Project Mercury",
    "section": "Project Mercury Playlist",
    "text": "Project Mercury Playlist\n\nPart 1"
  },
  {
    "objectID": "projects/airpressure.html",
    "href": "projects/airpressure.html",
    "title": "Air Pressure Versus Height",
    "section": "",
    "text": "It turns out nearly all smartphones (iPhones and Android models) and nearly all iPads have air pressure sensors (a.k.a. barometers). There are a couple of apps you can use to get a pressure reading but the one that seems to work best on all platforms is the Arduino Science Journal app. The goal of this activity is to use the air pressure sensor in a smartphone to collect pressure data at different heights and compare the data to known physical models."
  },
  {
    "objectID": "projects/airpressure.html#links-to-activity",
    "href": "projects/airpressure.html#links-to-activity",
    "title": "Air Pressure Versus Height",
    "section": "Links to Activity",
    "text": "Links to Activity\nInstructions for the activity, both data collection and data analysis, are given in the playlist shown below.\n\nStudent Worksheet\nArduino Science Journal app for data collection."
  },
  {
    "objectID": "projects/airpressure.html#air-pressure-versus-height-playlist",
    "href": "projects/airpressure.html#air-pressure-versus-height-playlist",
    "title": "Air Pressure Versus Height",
    "section": "Air Pressure Versus Height Playlist",
    "text": "Air Pressure Versus Height Playlist"
  },
  {
    "objectID": "projects/eccentricity.html",
    "href": "projects/eccentricity.html",
    "title": "Orbital Motion: Eccentricity",
    "section": "",
    "text": "Instructions for Orbital Motion: Eccentricity\nOrbital Motion: Eccentricity Code Editor"
  },
  {
    "objectID": "projects/eccentricity.html#links-to-activity",
    "href": "projects/eccentricity.html#links-to-activity",
    "title": "Orbital Motion: Eccentricity",
    "section": "",
    "text": "Instructions for Orbital Motion: Eccentricity\nOrbital Motion: Eccentricity Code Editor"
  },
  {
    "objectID": "projects/birdslauncher.html",
    "href": "projects/birdslauncher.html",
    "title": "Bird Launcher",
    "section": "",
    "text": "If you have finished the Apollo moon landing activity, you can continue with this lab where we will configure the game to shoot a bird-shaped projectile."
  },
  {
    "objectID": "projects/birdslauncher.html#links-to-activity",
    "href": "projects/birdslauncher.html#links-to-activity",
    "title": "Bird Launcher",
    "section": "Links to Activity",
    "text": "Links to Activity\n\nInstructions for the Bird Launcher\nCode Editor for the Bird Launcher"
  },
  {
    "objectID": "projects/birdslauncher.html#bird-launcher-playlist",
    "href": "projects/birdslauncher.html#bird-launcher-playlist",
    "title": "Bird Launcher",
    "section": "Bird Launcher Playlist",
    "text": "Bird Launcher Playlist"
  },
  {
    "objectID": "weteachcssummertraining2025schedule.html",
    "href": "weteachcssummertraining2025schedule.html",
    "title": "WeTeach_CS 2025 Summer Teacher Training Schedule",
    "section": "",
    "text": "We plan to do the 28 hours of professional development over 8 days with 3.5 hours per day. We will meet weekdays from June 23 - July 2\nNote: Tentative Schedule does not include periodic breaks."
  },
  {
    "objectID": "weteachcssummertraining2025schedule.html#week-1-monday",
    "href": "weteachcssummertraining2025schedule.html#week-1-monday",
    "title": "WeTeach_CS 2025 Summer Teacher Training Schedule",
    "section": "Week 1, Monday",
    "text": "Week 1, Monday\n\nIntroducing the instructors (Orban – physics, Butler – physics, data science, Zimmerman – math), Introduce the STEMcoding project (15 minutes)\nBriefly explain expectations and how the workshop will work, stipends, schedule (10 minutes)\nGroup teachers into breakout rooms by discipline and let them introduce each other and what they hope to get out of the course (20 mins)\nBig picture talk on data science / data literacy / computational thinking and computer science and “computational” science (15 minutes)\nRead the first chapter of Effective Data Visualization by Stephanie Evergreen (15 minutes)\nZoom breakouts – how do you already implement data literacy into your courses? What could you improve or emphasize? Any thoughts on the “big picture”? (20 min)\nIntroducing the CO2 air quality measurement activity and its connection to public health (15 minutes)\nIn zoom breakouts, use your CO2 sensor to measure CO2 levels in each room of your dwelling as well as outside, record that data in a spreadsheet, and figure out how to configure the “conditional formatting” so the color of each cell reflects the air quality (1 hour)\nPresentation and activity on “data cleaning” and the “data cycle” (40 min)"
  },
  {
    "objectID": "weteachcssummertraining2025schedule.html#week-1-tuesday-air-pressure",
    "href": "weteachcssummertraining2025schedule.html#week-1-tuesday-air-pressure",
    "title": "WeTeach_CS 2025 Summer Teacher Training Schedule",
    "section": "Week 1, Tuesday (Air Pressure)",
    "text": "Week 1, Tuesday (Air Pressure)\n\nInteractive discussion of data collection with smartphones, useful apps (including Arduino science journal) and sensors built into most smartphones(30 mins)\nIntroduction to Air Pressure versus height Activity (15 mins)\nTime for Participants to Collect Air Pressure Data Around House (Have Example Data if Unable to) (45 mins)\nDemonstration of Air Pressure Activity, Graphing, Line Fitting, Extracting Relevant Constants (1.5 hr)\nDiscuss extensions to the air pressure activity including drone and balloon measurements, and how curve fitting relates to artificial intelligence (30 min)"
  },
  {
    "objectID": "weteachcssummertraining2025schedule.html#week-1-wednesday-object-tracker",
    "href": "weteachcssummertraining2025schedule.html#week-1-wednesday-object-tracker",
    "title": "WeTeach_CS 2025 Summer Teacher Training Schedule",
    "section": "Week 1, Wednesday (Object Tracker)",
    "text": "Week 1, Wednesday (Object Tracker)\n\nIntroduction to Object Tracker Activity, Explanation of Data Collection (30 mins)\nTime for Participants to collect videos to process (45 mins)\nObject Tracker Demonstration, Processing Collected Videos, Downloading CSV Files (30 mins) Analyzing Object Tracker Data in Excel, Data Cleaning, Extracting Relevant Physical Constants (30 mins)\nAdditional Excel Activity to Practice Data Cleaning, Graphing, Equation Fitting (1.25 hr)"
  },
  {
    "objectID": "weteachcssummertraining2025schedule.html#week-1-thursday-pi-day-activities",
    "href": "weteachcssummertraining2025schedule.html#week-1-thursday-pi-day-activities",
    "title": "WeTeach_CS 2025 Summer Teacher Training Schedule",
    "section": "Week 1, Thursday (Pi Day Activities)",
    "text": "Week 1, Thursday (Pi Day Activities)\n\nIntroduction to p5.js, STEMcoding learning management system (30 min)\nPi Day Hour of Code Activity (Serial) (1 Hours)\nPi Day Activity (Parallel), Introduction to Parallel Computing (1.5 hr)\nOther STEMcoding resources for connecting math and CS (30 mins)"
  },
  {
    "objectID": "weteachcssummertraining2025schedule.html#week-1-friday-environmental-atmospheric-data-analysis",
    "href": "weteachcssummertraining2025schedule.html#week-1-friday-environmental-atmospheric-data-analysis",
    "title": "WeTeach_CS 2025 Summer Teacher Training Schedule",
    "section": "Week 1, Friday (Environmental / Atmospheric Data Analysis)",
    "text": "Week 1, Friday (Environmental / Atmospheric Data Analysis)\n\nSolar Cell data analysis (seasonal variation + long term decline) (1 hour)\nEarth Day Activity (using climate data from your location) (1 hour)\nOzone layer healing vs year analysis using NASA data (1 hour)\nPossibilities with other data sets (Concrete Island effect, Pacific Garbage Patch) (30 minutes)"
  },
  {
    "objectID": "weteachcssummertraining2025schedule.html#week-2-monday-physics-of-video-games-activities-hidden-figures-activity",
    "href": "weteachcssummertraining2025schedule.html#week-2-monday-physics-of-video-games-activities-hidden-figures-activity",
    "title": "WeTeach_CS 2025 Summer Teacher Training Schedule",
    "section": "Week 2, Monday (Physics of Video Games Activities + Hidden Figures activity)",
    "text": "Week 2, Monday (Physics of Video Games Activities + Hidden Figures activity)\n\nIntroduction to Activities (30 mins)\nIntroduction to Relevant Equations (30 mins)\nMove the Blob Demonstration (30 mins)\nTime for Participants to Experiment with Accelerate the Blob, Apollo Moon Lander (1 hr)\nIntroduction to “Project Mercury” activities that includes calculations relevant to the Hidden Figures movie (1 hr)\nWrap up and Possible Extensions on Activities to the Classroom (15 mins)"
  },
  {
    "objectID": "weteachcssummertraining2025schedule.html#week-2-tuesday-probability-with-the-random-number-generator-in-p5.js",
    "href": "weteachcssummertraining2025schedule.html#week-2-tuesday-probability-with-the-random-number-generator-in-p5.js",
    "title": "WeTeach_CS 2025 Summer Teacher Training Schedule",
    "section": "Week 2, Tuesday (Probability with the random number generator in p5.js)",
    "text": "Week 2, Tuesday (Probability with the random number generator in p5.js)\n\nExplain how the random function can take different types of arguments in p5.js (a.k.a. function overloading) (15 min)\n“That was totally random (part 1)” p5.js activity (30 min)\n“That was totally random (part 2)” p5.js activity which considers dice throws (1 hour)\nGame of Risk p5.js activities Part 1 & 2 (105 minutes)"
  },
  {
    "objectID": "weteachcssummertraining2025schedule.html#week-2-wednesday",
    "href": "weteachcssummertraining2025schedule.html#week-2-wednesday",
    "title": "WeTeach_CS 2025 Summer Teacher Training Schedule",
    "section": "Week 2, Wednesday",
    "text": "Week 2, Wednesday\n\nAny extra questions about activities covered, or activities we did not have time to go over (1 hour)\nZoom breakouts / check ins / individual plans to do more data science and CS in their classes + any extra questions about any activities covered (2.5 hours)"
  },
  {
    "objectID": "learningobjectives.html",
    "href": "learningobjectives.html",
    "title": "Learning Objectives",
    "section": "",
    "text": "Under Construction!"
  },
  {
    "objectID": "tags/electro.html",
    "href": "tags/electro.html",
    "title": "Electromagnetism",
    "section": "",
    "text": "Electromagnetism Units"
  },
  {
    "objectID": "tags/enviro.html",
    "href": "tags/enviro.html",
    "title": "Environmental Science",
    "section": "",
    "text": "Earth Day"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The STEMcoding project is an initiatve at Ohio State University that collaborates with teachers and researchers across the US\nNote: if you were looking for the non-profit STEMcoding Education Ohio you can find it at stemcodingohio.github.io"
  }
]